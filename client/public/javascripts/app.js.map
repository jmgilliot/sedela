{"version":3,"sources":["app/application.js","app/initialize.js","app/lib/router.js","app/lib/view_helper.js","app/models/collection.js","app/models/model.js","app/views/accountSettings_view.js","app/views/choices_view.js","app/views/home_view.js","app/views/templates/accountSettings.jade","app/views/templates/choices.jade","app/views/templates/home.jade","app/views/view.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAAA;ACAA;AAAA;AACA;AADA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["// Application bootstrapper.\nvar Application = {\n  initialize: function () {\n    var Router = require('./lib/router');\n    var HomeView = require('./views/home_view');\n    var ChoicesView = require('./views/choices_view');\n    var AccountSettingsView = require('./views/accountSettings_view');\n    // Ideally, initialized classes should be kept in controllers & mediator.\n    // If you're making big webapp, here's more sophisticated skeleton\n    // https://github.com/paulmillr/brunch-with-chaplin\n    //we initialize all views of the application\n    this.homeView = new HomeView();\n    this.choicesView = new ChoicesView();\n    this.accountSettingsView = new AccountSettingsView();\n    //and the router\n    this.router = new Router();\n    if (typeof Object.freeze === 'function') {\n      Object.freeze(this);\n    }\n  }\n};\n\nmodule.exports = Application;\n","var application = require('./application');\n\n//entry point of the web application\n$(function () {\n  application.initialize();\n  Backbone.history.start();\n});","var application = require('../application');\n\nmodule.exports = Backbone.Router.extend({\n  routes: {\n    '': 'home',\n    'portfolio': 'portfolio',\n    'choices': 'choices',\n    'accountSettings': 'accountSettings'\n  },\n\n  home: function () {\n    $('body').html(application.homeView.render().el);\n  },\n  \n  portfolio: function () {\n    $('body').html(application.portfolioView.render().el);\n  },\n  \n  choices: function () {\n    $('body').html(application.choicesView.render().el);\n  },\n  \n  accountSettings: function () {\n    $('body').html(application.accountSettingsView.render().el);\n  }\n});\n","// Put your handlebars.js helpers here.\n","// Base class for all collections.\nmodule.exports = Backbone.Collection.extend({\n});\n","// Base class for all models.\nmodule.exports = Backbone.Model.extend({\n});\n","var View = require('./view');\nvar template = require('./templates/accountSettings');\n\nmodule.exports = View.extend({\n  id: 'accountSettings',\n  template: template\n});\n","var View = require('./view');\nvar template = require('./templates/choices');\n\nmodule.exports = View.extend({\n  id: 'choices',\n  template: template\n});\n","var View = require('./view');\nvar template = require('./templates/home');\n\nmodule.exports = View.extend({\n  id: 'home',\n  template: template\n});\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<script src=\\\"//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\\\"></script><script src=\\\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js\\\"></script><link href=\\\"//maxcdn.bootstrapcdn.com/bootswatch/3.3.0/flatly/bootstrap.min.css\\\" rel=\\\"stylesheet\\\"/><style>/*************************/\\n/**       GLOBAL        **/\\n/*************************/\\n\\n/* Vertical navigation bar with responsive design */ \\n@media (min-width: 768px) {\\n  .sidebar-nav .navbar .navbar-collapse {\\n    padding: 0;\\n    max-height: none;\\n  }\\n  .sidebar-nav .navbar ul {\\n    float: none;\\n  }\\n  .sidebar-nav .navbar ul:not {\\n    display: block;\\n  }\\n  .sidebar-nav .navbar li {\\n    float: none;\\n    display: block;\\n  }\\n  .sidebar-nav .navbar li a {\\n    padding-top: 12px;\\n    padding-bottom: 12px;\\n  }\\n  \\n  div.navbar{\\n    border-radius:0px;\\n    margin-top:20px;\\n    background-color:rgba(0,0,0,0);\\n  }\\n  \\n  div.navbar ul.nav li a{\\n    color:#444;\\n    font-weight:700;\\n  }\\n  \\n  div.navbar ul.nav li a:hover{\\n    color:#BBB;\\n    font-weight:700;\\n    background-color:rgb(44, 62, 80);\\n  }\\n}\\n\\n@media (max-width: 767px) {\\n  h3.nav-header{\\n    display: none;\\n  }\\n}\\n\\ndiv.leftMenu{\\n  padding:0;\\n}\\n\\n\\n/*General elements*/\\ndiv.container{\\n  width:100%;\\n  padding:0;\\n}\\n\\np{\\n  margin-top:15px;\\n}\\n\\nbody{\\n  background-color: #ecf0f1;\\n}\\n\\n/***********************/\\n/**    COMPONENTS     **/\\n/***********************/\\n\\n/*---------------------------*/\\n/*Spinner loading icon*/\\n.spinner {\\n  height: 28px;\\n  width: 28px;\\n  animation: rotate 0.8s infinite linear;\\n  border: 5px solid #f39c12;\\n  border-right-color: transparent;\\n  border-radius: 50%;\\n}\\n\\n@keyframes rotate {\\n  0%    { transform: rotate(0deg); }\\n  100%  { transform: rotate(360deg); }\\n}\\n/*---------------------------*/\\n\\n\\n/*---------------------------*/\\n/* Button to set visibility */\\n/*\\n  HTML Structure (Jade)\\n    input#exempleID.visibilityCheckBox(type=\\\"checkbox\\\", name=\\\"#exempleID\\\")\\n    label(for=\\\"#exempleID\\\")\\n*/\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"]{\\n  display:none;\\n}\\n\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"] + label{\\n  content:\\\"\\\";\\n  width:27px;\\n  height:27px;\\n  border:3px solid #bbb;\\n  background-color: #777;\\n  cursor: pointer;\\n  box-shadow: 0px 0px 2px #333 inset;\\n  transition: all 0.3s ease-out;\\n}\\n\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"]:checked + label{\\n  background-color: #27ae60;\\n  box-shadow: 0px 0px 5px #333 inset;\\n  transition: all 0.3s ease-out;\\n}\\n\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"] + label:hover::after, input.visibilityCheckBox[type=\\\"checkbox\\\"]:checked + label:hover::after{\\n  display: block;\\n  position: absolute;\\n  text-align: center;\\n  white-space: nowrap;\\n  background: rgba(0,0,0,.7);\\n  -moz-border-radius:5px;\\n  -webkit-border-radius:5px;\\n  border-radius:5px;\\n  color: #fff;\\n  font-size: .86em;\\n  padding:0.3em;\\n}\\n\\n/*Explaination popup*/\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"] + label:hover::after{\\n  content: \\\"Afficher sur mon portfolio\\\";\\n}\\n\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"]:checked + label:hover::after{\\n  content: \\\"Enlever de mon portfolio\\\";\\n}\\n/*---------------------------*/\\n\\n\\n/*---------------------------*/\\n/*Star for mandatory forms elements*/\\nspan.mandatoryStar{\\n  vertical-align:super;\\n  color:#e74c3c;\\n}\\n/*---------------------------*/\\n\\n\\n/*---------------------------*/\\n/* Button to remove a document */\\n/*\\n  HTML Structure (Jade)\\n    div.removeButton(documentID=\\\"exempleID\\\" onclick=\\\"removeDocument(this)\\\")\\n*/\\ndiv.removeButton{\\n  border:3px solid #bbb;\\n  width:27px;\\n  height:27px;\\n  background-color: #c0392b;\\n  cursor: pointer;\\n  transition: box-shadow 0.3s;\\n}\\n\\ndiv.removeButton:hover{\\n  box-shadow: 0px 0px 3px #333 inset;\\n  transition: box-shadow 0.3s;\\n}\\n\\ndiv.removeButton::before, div.removeButton::after {\\n    content: '';\\n    position: absolute;\\n    height: 3px;\\n    width: 100%;\\n    top: 50%;\\n    left: 0;\\n    margin-top:-2px;\\n    background: #bbb;;\\n}\\n\\n/*cross shape*/  \\ndiv.removeButton::before {\\n  transform: rotate(45deg);\\n  -webkit-transform: rotate(45deg);\\n}\\n\\ndiv.removeButton::after {\\n  transform: rotate(-45deg);\\n  -webkit-transform: rotate(-45deg);\\n}\\n/*---------------------------*/\\n\\n\\n/*---------------------------*/\\n/** Button for editing mode **/\\n/*\\n  HTML Structure (Jade)\\n    input#exempleID.editionCheckBox(type=\\\"checkbox\\\", name=\\\"exempleID\\\")\\n    label(documentID=\\\"exempleID\\\" onclick=\\\"editDocument(this)\\\")\\n*/\\ninput.editionCheckBox[type=\\\"checkbox\\\"]{\\n  display:none;\\n}\\n\\ninput.editionCheckBox[type=\\\"checkbox\\\"] + label{\\n  content:\\\"\\\";\\n  color:black;\\n  width:75px;\\n  height:27px;\\n  border:3px solid #bbb;\\n  background-color: #bdc3c7;\\n  cursor: pointer;\\n  box-shadow: 0px 0px 2px #333 inset;\\n  transition: all 0.3s ease-out;\\n}\\n\\ninput.editionCheckBox[type=\\\"checkbox\\\"]:checked + label{\\n  content:\\\"\\\";\\n  background-color: #f39c12;\\n  box-shadow: 0px 0px 5px #333 inset;\\n  transition: all 0.3s ease-out;\\n}\\n\\n/*Label inside the button*/\\ninput.editionCheckBox[type=\\\"checkbox\\\"] + label::after{\\n  content:\\\"Modifier\\\";\\n  margin-left:5px;\\n}\\n\\ninput.editionCheckBox[type=\\\"checkbox\\\"]:checked + label::after{\\n  content:\\\"Terminer\\\";\\n  margin-left:3px;\\n}\\n/*---------------------------*//*****************/\\n/* Settings View */\\n/*****************/\\n/*part which contains the submmit button*/\\n.settingsContainer div.submitButton{\\n  margin-top:30px;\\n}\\n\\n/*Submmit button*/\\n.settingsContainer div.submitButton button{\\n  margin-bottom:20px;\\n  margin-left:-200px;\\n}\\n\\n/*textBoxes*/\\n.settingsContainer input{\\n  width: 250px;\\n}\\n\\n/*Button to connect DoYouBuzz account, message to tell if the DoYouBuzz account is now connected*/\\n.settingsContainer button#DYBconnection, button#DYBconnected{\\n  margin : 20px 0px;\\n}\\n\\n/*Button to connect DoYouBuzz account*/\\n.settingsContainer #DYBconnection{\\n  display:block;\\n}\\n\\n/*Loading icon to wait while the DoYouBuzz account connection page opening*/\\n.settingsContainer #DYBloadingIcon{\\n  position:absolute;\\n  margin-top:-35px;\\n  margin-left:320px;\\n}\\n</style><div class=\\\"container\\\"><div class=\\\"col-md-2 leftMenu\\\"><div class=\\\"sidebar-nav\\\"><div role=\\\"navigation\\\" class=\\\"navbar navbar-default\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".sidebar-navbar-collapse\\\" class=\\\"navbar-toggle\\\"><span class=\\\"sr-only\\\">Toggle navigation</span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span></button><span class=\\\"visible-xs navbar-brand\\\">Menu</span></div><div class=\\\"navbar-collapse collapse sidebar-navbar-collapse\\\"><ul class=\\\"nav navbar-nav\\\"><li><a href=\\\"#\\\">Mon profil</a></li><li><a href=\\\"/public/portfolio\\\" target=\\\"_blank\\\">Voir mon Portfolio</a></li><li><a href=\\\"#choices\\\">Mes choix</a></li><li class=\\\"active\\\"><a href=\\\"#accountSettings\\\">Paramètres</a></li></ul></div></div></div></div><div class=\\\"col-md-10 settingsContainer\\\"><div class=\\\"row text-center\\\"><h1 class=\\\"col-md-12\\\">Configurations des comptes</h1></div><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><h2>DoYouBuzz</h2><p>Entrer votre clé API obtenu de DoYouBuzz (<a href=\\\"#\\\">Aide</a>) :</p><input id=\\\"apiKey\\\" type=\\\"text\\\" name=\\\"DYBapiKey\\\" placeholder=\\\"API Key\\\"/><p>Entrer votre clé API secrète obtenu de DoYouBuzz (<a href=\\\"#\\\">Aide</a>) :</p><input id=\\\"apiSecret\\\" type=\\\"password\\\" name=\\\"DYBapiSecret\\\" placeholder=\\\"API Secret\\\"/><button id=\\\"DYBconnection\\\" type=\\\"button\\\" onclick=\\\"getDYBConnection()\\\" class=\\\"btn btn-warning\\\">(Re)Connecter mon compte DoYouBuzz.</button><a id=\\\"DYBAuthenticationLink\\\" hidden=\\\"true\\\" target=\\\"_blank\\\">Cliquer maintenant ici pour vous authentifier à votre compte DoYouBuzz</a><div id=\\\"DYBloadingIcon\\\" style=\\\"display:none;\\\" class=\\\"spinner\\\"></div><div id=\\\"DYBconnected\\\" style=\\\"display: none;\\\" class=\\\"alert alert-success\\\">Votre compte DoYouBuzz est maintenant enregistré.</div></div><div class=\\\"col-md-6\\\"><h2>OpenBadges</h2><p>Entrer l'adresse email associée à votre compte OpenBadges :</p><input id=\\\"openBadgesEmail\\\" type=\\\"text\\\" name=\\\"OBemail\\\" placeholder=\\\"name@example.com\\\"/></div></div><div class=\\\"row\\\"><div class=\\\"col-md-12 submitButton text-center\\\"><button id=\\\"submitChanges\\\" onclick=\\\"submitAccountInfos()\\\" class=\\\"btn btn-primary\\\">Valider les changements</button><div id=\\\"savedMessage\\\" hidden=\\\"true\\\" class=\\\"alert alert-success\\\">Vos paramètres sont enregistrées</div><div id=\\\"missingArguments\\\" hidden=\\\"true\\\" class=\\\"alert alert-danger\\\">Des données sont manquantes ou invalides, merci de vérifier puis de réessayer.</div></div></div></div></div><script type=\\\"text/javascript\\\">//if this is a response from DYB we have arguments and a different link\\nvar url = window.location.href;\\nurl = url.split(\\\"?\\\");\\nif(url.length > 1){//remove arguments (that was saved on the server before)\\n  url = url[0];\\n  url = url.replace(/apps/, \\\"#apps\\\");\\n  url += \\\"accountSettings\\\";\\n  window.location = url;//and redirect to this correct page\\n}\\n// here is the code to do the request, to get all elements from the database and set all input values\\nvar accountSettingsData = {};//global object for accounts informations from server\\nvar xmlHttp = new XMLHttpRequest();\\nxmlHttp.open( \\\"GET\\\", \\\"getAccountsInfos\\\", false ); // false for synchronous request\\nxmlHttp.send();\\nif(xmlHttp.status == 200 || xmlHttp.status == 304){\\n  // accountSettings object getten from database and will be in the global scope\\n  accountSettingsData = JSON.parse(xmlHttp.responseText)[0] || {};//if this is the very first execution, that will be undefined so we want {}\\n  document.getElementById(\\\"apiKey\\\").value = accountSettingsData.doYouBuzzAPIKey || \\\"\\\";\\n  document.getElementById(\\\"apiSecret\\\").value = accountSettingsData.doYouBuzzAPISecret || \\\"\\\";\\n  document.getElementById(\\\"openBadgesEmail\\\").value = accountSettingsData.openBadgesEmail || \\\"\\\";\\n  // if this is a response from a DoYouBuzz authentification we display the message to say that the account is connected\\n  if(accountSettingsData.DYBResponse == \\\"OK\\\"){//finally not unused due to the refresh above -> need to be enhanced for better UX\\n    //document.getElementById(\\\"DYBconnected\\\").setAttribute(\\\"style\\\", \\\"\\\");\\n  }\\n}\\n\\n//function to request the url elements from database and to authenticate the DoYouBuzz account\\nfunction getDYBConnection(){\\n  //remove potential authentication link\\n  document.getElementById(\\\"DYBAuthenticationLink\\\").setAttribute(\\\"hidden\\\", \\\"true\\\");\\n  if (missingArgsMessage) missingArgsMessage.setAttribute(\\\"hidden\\\", \\\"true\\\");\\n  //loading animation\\n  document.getElementById(\\\"DYBloadingIcon\\\").setAttribute(\\\"style\\\", \\\"\\\");\\n  var DYBapiKey = document.getElementById(\\\"apiKey\\\").value || \\\"\\\";\\n  var DYBapiSecret = document.getElementById(\\\"apiSecret\\\").value || \\\"\\\";\\n  if(DYBapiKey == \\\"\\\" || DYBapiSecret == \\\"\\\"){\\n        // both elements are required, so if one is missing we stop here and inform the user\\n        var missingArgsMessage = document.getElementById(\\\"missingArguments\\\");\\n        missingArgsMessage.innerHTML = \\\"Les deux informations (clé et clé secrète) doivent être fournis pour connecter votre compte DoYouBuzz. Merci de les remplir.\\\";\\n        missingArgsMessage.removeAttribute(\\\"hidden\\\");\\n        document.getElementById(\\\"DYBloadingIcon\\\").setAttribute(\\\"style\\\", \\\"display:none\\\");\\n        return;\\n  }\\n  //the callback is the URL to get back after the user will confirm the authentication on DoYouBuzz platform\\n  var callback = window.location.href;//to come back to the cozycloud app\\n  //the request (asynchronous here)\\n  var xmlHttp = new XMLHttpRequest();\\n  //parameters for the request\\n  var parameters = \\\"DYBapiKey=\\\" + DYBapiKey + \\\"&DYBapiSecret=\\\" + DYBapiSecret + \\\"&callback=\\\" + callback;\\n  xmlHttp.open( \\\"POST\\\", \\\"getDYBConnection\\\", true ); // true for asynchronous request\\n  xmlHttp.setRequestHeader(\\\"Content-type\\\", \\\"application/x-www-form-urlencoded\\\");\\n  xmlHttp.onreadystatechange = function(){\\n    //if we got the correct elements, we open the url to the authentication page (in a new tab/window)\\n    if (xmlHttp.readyState == 4 && (xmlHttp.status == 200 || xmlHttp.status == 304)) {\\n      var uri = \\\"http://www.doyoubuzz.com/fr/oauth/authorize\\\" + \\\"?\\\" + xmlHttp.responseText;\\n      document.getElementById(\\\"DYBAuthenticationLink\\\").href = uri;\\n      document.getElementById(\\\"DYBAuthenticationLink\\\").removeAttribute(\\\"hidden\\\");\\n      document.getElementById(\\\"DYBloadingIcon\\\").setAttribute(\\\"style\\\", \\\"display:none\\\");\\n    }else if(xmlHttp.readyState == 4){\\n      var missingArgsMessage = document.getElementById(\\\"missingArguments\\\");\\n      missingArgsMessage.innerHTML = xmlHttp.responseText;\\n      missingArgsMessage.removeAttribute(\\\"hidden\\\");\\n      document.getElementById(\\\"DYBloadingIcon\\\").setAttribute(\\\"style\\\", \\\"display:none\\\");\\n    }\\n  }\\n  xmlHttp.send( parameters );\\n}\\n\\n//function to submit all information\\nfunction submitAccountInfos(){\\n    //we hide missing argumets message if it's displayed\\n    document.getElementById(\\\"missingArguments\\\").setAttribute(\\\"hidden\\\", true);\\n    document.getElementById(\\\"savedMessage\\\").setAttribute(\\\"hidden\\\", true);\\n    //we get all inputs value\\n    var DYBapiKey = document.getElementById(\\\"apiKey\\\").value || \\\"\\\";\\n    var DYBapiSecret = document.getElementById(\\\"apiSecret\\\").value || \\\"\\\";\\n    var OBemail = document.getElementById(\\\"openBadgesEmail\\\").value || \\\"\\\";\\n\\n    //if we already have accountSettings object, we use its id to update it with this submiting\\n    var docId = accountSettingsData.id || \\\"\\\";\\n    //we need at least one element to save it into the database\\n    if(DYBapiKey == \\\"\\\" && DYBapiSecret == \\\"\\\" && OBemail == \\\"\\\"){\\n        var missingArgsMessage = document.getElementById(\\\"missingArguments\\\");\\n        missingArgsMessage.innerHTML = \\\"Aucun champs n'a été rempli. Veuillez en remplir pour enregistrer des informations.\\\";\\n        missingArgsMessage.removeAttribute(\\\"hidden\\\");\\n        return;\\n    }\\n    //set parameters for the request\\n    var parameters = \\\"DYBapiKey=\\\" + DYBapiKey + \\\"&DYBapiSecret=\\\" + DYBapiSecret + \\\"&OBemail=\\\" + OBemail + \\\"&id=\\\" + docId;\\n    var xhttpInfos = new XMLHttpRequest();\\n    //asynchronous request\\n    xhttpInfos.open(\\\"PUT\\\", \\\"updateAccountsInfos\\\", false);\\n    xhttpInfos.setRequestHeader(\\\"Content-type\\\", \\\"application/x-www-form-urlencoded\\\");\\n    xhttpInfos.send(parameters);\\n    if(xhttpInfos.status != 200 && xhttpInfos.status != 304){\\n      var missingArgsMessage = document.getElementById(\\\"missingArguments\\\");\\n      missingArgsMessage.innerHTML = \\\"Echec de l'enregistrement des données.\\\";\\n      missingArgsMessage.removeAttribute(\\\"hidden\\\");\\n    }else{\\n      document.getElementById(\\\"savedMessage\\\").removeAttribute(\\\"hidden\\\");\\n      document.getElementById(\\\"savedMessage\\\").innerHTML = \\\"Vos paramètres sont enregistrées\\\";\\n    }\\n}</script>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<script src=\\\"//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\\\"></script><script src=\\\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js\\\"></script><link href=\\\"//maxcdn.bootstrapcdn.com/bootswatch/3.3.0/flatly/bootstrap.min.css\\\" rel=\\\"stylesheet\\\"/><style>/*************************/\\n/**       GLOBAL        **/\\n/*************************/\\n\\n/* Vertical navigation bar with responsive design */ \\n@media (min-width: 768px) {\\n  .sidebar-nav .navbar .navbar-collapse {\\n    padding: 0;\\n    max-height: none;\\n  }\\n  .sidebar-nav .navbar ul {\\n    float: none;\\n  }\\n  .sidebar-nav .navbar ul:not {\\n    display: block;\\n  }\\n  .sidebar-nav .navbar li {\\n    float: none;\\n    display: block;\\n  }\\n  .sidebar-nav .navbar li a {\\n    padding-top: 12px;\\n    padding-bottom: 12px;\\n  }\\n  \\n  div.navbar{\\n    border-radius:0px;\\n    margin-top:20px;\\n    background-color:rgba(0,0,0,0);\\n  }\\n  \\n  div.navbar ul.nav li a{\\n    color:#444;\\n    font-weight:700;\\n  }\\n  \\n  div.navbar ul.nav li a:hover{\\n    color:#BBB;\\n    font-weight:700;\\n    background-color:rgb(44, 62, 80);\\n  }\\n}\\n\\n@media (max-width: 767px) {\\n  h3.nav-header{\\n    display: none;\\n  }\\n}\\n\\ndiv.leftMenu{\\n  padding:0;\\n}\\n\\n\\n/*General elements*/\\ndiv.container{\\n  width:100%;\\n  padding:0;\\n}\\n\\np{\\n  margin-top:15px;\\n}\\n\\nbody{\\n  background-color: #ecf0f1;\\n}\\n\\n/***********************/\\n/**    COMPONENTS     **/\\n/***********************/\\n\\n/*---------------------------*/\\n/*Spinner loading icon*/\\n.spinner {\\n  height: 28px;\\n  width: 28px;\\n  animation: rotate 0.8s infinite linear;\\n  border: 5px solid #f39c12;\\n  border-right-color: transparent;\\n  border-radius: 50%;\\n}\\n\\n@keyframes rotate {\\n  0%    { transform: rotate(0deg); }\\n  100%  { transform: rotate(360deg); }\\n}\\n/*---------------------------*/\\n\\n\\n/*---------------------------*/\\n/* Button to set visibility */\\n/*\\n  HTML Structure (Jade)\\n    input#exempleID.visibilityCheckBox(type=\\\"checkbox\\\", name=\\\"#exempleID\\\")\\n    label(for=\\\"#exempleID\\\")\\n*/\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"]{\\n  display:none;\\n}\\n\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"] + label{\\n  content:\\\"\\\";\\n  width:27px;\\n  height:27px;\\n  border:3px solid #bbb;\\n  background-color: #777;\\n  cursor: pointer;\\n  box-shadow: 0px 0px 2px #333 inset;\\n  transition: all 0.3s ease-out;\\n}\\n\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"]:checked + label{\\n  background-color: #27ae60;\\n  box-shadow: 0px 0px 5px #333 inset;\\n  transition: all 0.3s ease-out;\\n}\\n\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"] + label:hover::after, input.visibilityCheckBox[type=\\\"checkbox\\\"]:checked + label:hover::after{\\n  display: block;\\n  position: absolute;\\n  text-align: center;\\n  white-space: nowrap;\\n  background: rgba(0,0,0,.7);\\n  -moz-border-radius:5px;\\n  -webkit-border-radius:5px;\\n  border-radius:5px;\\n  color: #fff;\\n  font-size: .86em;\\n  padding:0.3em;\\n}\\n\\n/*Explaination popup*/\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"] + label:hover::after{\\n  content: \\\"Afficher sur mon portfolio\\\";\\n}\\n\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"]:checked + label:hover::after{\\n  content: \\\"Enlever de mon portfolio\\\";\\n}\\n/*---------------------------*/\\n\\n\\n/*---------------------------*/\\n/*Star for mandatory forms elements*/\\nspan.mandatoryStar{\\n  vertical-align:super;\\n  color:#e74c3c;\\n}\\n/*---------------------------*/\\n\\n\\n/*---------------------------*/\\n/* Button to remove a document */\\n/*\\n  HTML Structure (Jade)\\n    div.removeButton(documentID=\\\"exempleID\\\" onclick=\\\"removeDocument(this)\\\")\\n*/\\ndiv.removeButton{\\n  border:3px solid #bbb;\\n  width:27px;\\n  height:27px;\\n  background-color: #c0392b;\\n  cursor: pointer;\\n  transition: box-shadow 0.3s;\\n}\\n\\ndiv.removeButton:hover{\\n  box-shadow: 0px 0px 3px #333 inset;\\n  transition: box-shadow 0.3s;\\n}\\n\\ndiv.removeButton::before, div.removeButton::after {\\n    content: '';\\n    position: absolute;\\n    height: 3px;\\n    width: 100%;\\n    top: 50%;\\n    left: 0;\\n    margin-top:-2px;\\n    background: #bbb;;\\n}\\n\\n/*cross shape*/  \\ndiv.removeButton::before {\\n  transform: rotate(45deg);\\n  -webkit-transform: rotate(45deg);\\n}\\n\\ndiv.removeButton::after {\\n  transform: rotate(-45deg);\\n  -webkit-transform: rotate(-45deg);\\n}\\n/*---------------------------*/\\n\\n\\n/*---------------------------*/\\n/** Button for editing mode **/\\n/*\\n  HTML Structure (Jade)\\n    input#exempleID.editionCheckBox(type=\\\"checkbox\\\", name=\\\"exempleID\\\")\\n    label(documentID=\\\"exempleID\\\" onclick=\\\"editDocument(this)\\\")\\n*/\\ninput.editionCheckBox[type=\\\"checkbox\\\"]{\\n  display:none;\\n}\\n\\ninput.editionCheckBox[type=\\\"checkbox\\\"] + label{\\n  content:\\\"\\\";\\n  color:black;\\n  width:75px;\\n  height:27px;\\n  border:3px solid #bbb;\\n  background-color: #bdc3c7;\\n  cursor: pointer;\\n  box-shadow: 0px 0px 2px #333 inset;\\n  transition: all 0.3s ease-out;\\n}\\n\\ninput.editionCheckBox[type=\\\"checkbox\\\"]:checked + label{\\n  content:\\\"\\\";\\n  background-color: #f39c12;\\n  box-shadow: 0px 0px 5px #333 inset;\\n  transition: all 0.3s ease-out;\\n}\\n\\n/*Label inside the button*/\\ninput.editionCheckBox[type=\\\"checkbox\\\"] + label::after{\\n  content:\\\"Modifier\\\";\\n  margin-left:5px;\\n}\\n\\ninput.editionCheckBox[type=\\\"checkbox\\\"]:checked + label::after{\\n  content:\\\"Terminer\\\";\\n  margin-left:3px;\\n}\\n/*---------------------------*//*************************/\\n/**    CHOICES VIEW     **/\\n/*************************/\\n\\n.choicesContainer .row{\\n  margin-right: 0px;\\n  margin-left: 0px;\\n}\\n\\n.choicesContainer h1{\\n  margin-bottom:30px;\\n}\\n\\n/*tab design for each category of documents and the badges category*/\\n.choicesContainer .tab{\\n  border:1px solid #555;\\n  margin:0 10px;\\n  position: relative;\\n  padding-bottom: 10px;\\n  border-radius: 8px 8px 3px 3px;\\n  background-color: rgb(44,62,80);\\n  height: 65px;\\n  margin-top:-8px;\\n  overflow: hidden;\\n  transition:all 0.3s ease;\\n}\\n\\n/*when a category is selected by the user*/\\n.choicesContainer .tab.choiceCategory{\\n  height:auto!important;\\n  min-height: 80px!important;\\n  margin-top:-8px!important;\\n  overflow: scroll;\\n  box-shadow: 0px 0px 15px black;\\n  background-color: rgb(64,82,100);\\n  transition:all 0.3s ease;\\n}\\n\\n/*hover behavior of the category tab*/\\n.choicesContainer .tab:hover{\\n  box-shadow: 0px 0px 15px black;\\n  height:100px;\\n  margin-top:-43px;\\n  transition:all 0.3s ease;\\n}\\n\\n/*tabs title*/\\n.choicesContainer .tabTitle{\\n  padding:20px;\\n  border-radius: 15px 15px 0px 0px;\\n  font-size: 18px;\\n  color: #fbfcfc;\\n  display:block;\\n  clear: both;\\n  cursor: pointer;\\n}\\n\\n/*documents container of each tab*/\\n.choicesContainer .docsContainer{\\n  padding:5px;\\n}\\n\\n/*changes to the visibility checkbox*/\\n.choicesContainer input.visibilityCheckBox[type=\\\"checkbox\\\"], .choicesContainer input.visibilityCheckBox[type=\\\"checkbox\\\"] + label{\\n  position: absolute;\\n  top :0px;\\n  right:0px;\\n}\\n\\n.choicesContainer input.visibilityCheckBox[type=\\\"checkbox\\\"] + label:hover::after, .choicesContainer input.visibilityCheckBox[type=\\\"checkbox\\\"]:checked + label:hover::after{\\n  top: -35px;\\n  left:-130px; \\n}\\n\\n/*specific to document elements*/\\n.choicesContainer .documentBlock{\\n  padding:5px;\\n  margin-bottom:5px;\\n}\\n\\n.choicesContainer .documentBlock .documentContent{\\n  box-shadow: 0px 0px 8px #999;\\n  padding:5px;\\n  padding-top:20px; /*Space for tools buttons*/\\n  background-color: rgba(255,255,255,0.9);\\n  min-height:124px;\\n  font-size: 12pt;\\n}\\n\\n.choicesContainer .documentBlock .documentContent a{\\n  color:#2980b9;\\n  text-decoration: underline;\\n}\\n\\n.choicesContainer .documentBlock .documentContent .documentTitle{\\n  padding-left:25px;\\n  font-size:14pt;\\n}\\n\\n.choicesContainer .documentBlock .documentContent .documentDate, .choicesContainer .documentBlock .documentContent .documentSource{\\n  font-size: 10pt;\\n}\\n\\n/*FOR EMBEDED ELEMENTS*/\\n.embededElement img{\\n  border-radius: 2px;\\n  box-shadow: 0px 0px 8px rgba(0,0,0,0.7);\\n  border:1px solid black;\\n  max-width:98%;\\n}\\n\\n.embededElement iframe{\\n  border:1px solid black;\\n}\\n\\n\\n\\n/*changes to the button to remove a document*/\\n.choicesContainer div.removeButton{\\n  position: absolute;\\n  top:0;\\n  right:27px;\\n}\\n\\n/*specific to badge elements*/\\n.choicesContainer .badgeBlock{\\n  padding:5px;\\n  margin-bottom:5px;\\n}\\n\\n.choicesContainer .badgeBlock .badgeContent{\\n  box-shadow: 0px 0px 8px #999;\\n  padding:2px;\\n  background-color: rgba(255,255,255,0.9);\\n  min-height:124px;\\n}\\n\\n/*Badge image*/\\n.choicesContainer img.badgeImage{\\n  width:100px;\\n  display: inline-block;\\n  float:left;\\n  height:100px;\\n  margin:10px;\\n  padding:8px;\\n  border-radius: 5px;\\n  box-shadow: 0px 0px 5px #333 inset;\\n  border:2px solid #bbb;\\n  -webkit-filter: drop-shadow(0px 0px 5px rgba(0, 0, 0, 0.5));\\n  filter: drop-shadow(0px 0px 5px rgba(0, 0, 0, 0.5));\\n}\\n\\n.choicesContainer .badgeBlock .badgeDetails{\\n  display: table;\\n}\\n\\n.choicesContainer .badgeDetails span.badgeName{\\n  font-weight: 900;\\n}\\n\\n.choicesContainer .badgeDetails p.badgeIssuer{\\n  margin-bottom:8px;\\n  margin-top: 12px;\\n  margin-right: 30px;\\n}\\n.choicesContainer .badgeDetails p.badgeDescription{\\n  margin-top:0px;\\n  margin-bottom:0px;\\n  font-size: 14px;\\n  margin-left:8px;\\n  margin-right:5px;\\n}\\n\\n.choicesContainer .badgeDetails .badgeLink{\\n  float:right;\\n  margin-right:10px;\\n  padding:10px;\\n}\\n\\n.choicesContainer .badgeBlock a{\\n  color:black;\\n  text-decoration: underline;\\n}\\n\\n/*button to sync openBadges backpack badges*/\\n#syncOBbutton{\\n  width:320px;\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n  background-color:rgba(126, 206, 234, 0.5);\\n}\\n\\n/*changes to the editing mode button*/\\n.choicesContainer input.editionCheckBox[type=\\\"checkbox\\\"] + label{\\n  position: absolute;\\n  top:0;\\n  right:54px;\\n}\\n\\n/* For editing mode */\\n.choicesContainer p[contenteditable=\\\"true\\\"], .choicesContainer span[contenteditable=\\\"true\\\"]{\\n  border:1px solid rgb(200, 200, 200);\\n  padding:3px;\\n}\\n\\n/*part which contains the submit button and other buttons*/\\n.choicesContainer #submitPart{\\n  margin-top:15px;\\n}\\n\\n/*Button to sync DoYouBuzz documents*/\\n#syncDYBDocumentsButton{\\n  margin:15px;\\n}\\n\\n\\n\\n\\n/* Adding document part */\\n#addDocumentPart{\\n  margin-bottom: 50px;\\n}\\n\\n#addDocumentBlock{\\n  border:2px #888 dashed;\\n  border-radius:5px;\\n}\\n\\n#addDocumentContent{\\n  box-shadow: 0px 0px 5px #999;\\n  padding:10px;\\n}\\n\\n#addDocumentPart label{\\n  vertical-align: top;\\n  width: 40%;\\n  margin:10px 0px;\\n}\\n\\n#addDocumentPart input{\\n  margin:10px 0px;\\n  width:60%;\\n}\\n\\n#addDocumentButton{\\n margin-top:10px; \\n}\\n\\n#addButton{\\n  border-radius:58px;\\n  width:58px;\\n  height:58px;\\n  display:block;\\n  border:4px solid #888;\\n  background-color: transparent;\\n  color:#888;\\n  font-size: 30px;\\n  margin:auto;\\n  margin-top:19px;\\n  transition:all 0.2s;\\n}\\n\\n#cancelButton{\\n  margin-top:10px;\\n  margin-left: 10px;\\n}\\n\\n\\n/*Placeholder for the document adding part*/\\n#placeHolderAddDocumentContent{\\n  box-shadow: none;\\n  background: radial-gradient(rgba(230,230,230,1), rgba(255,255,255,0));\\n  background: -webkit-radial-gradient(rgba(230,230,230,1), rgba(255,255,255,0));\\n  min-height:100px;\\n  height: 100px;\\n  padding:2px;\\n}\\n\\n#placeHolderAddDocumentBlock{\\n  border:2px #888 dashed;\\n  border-radius:10px;\\n  cursor: pointer;\\n  opacity: 0.65;\\n  transition:opacity 0.2s;\\n}\\n\\n#placeHolderAddDocumentBlock:hover{\\n  opacity: 1;\\n  transition:opacity 0.2s;\\n}\\n\\n/* Plus button of the placeholder*/\\n#placeHolderAddDocumentBlock:hover #addButton{\\n  border-radius:64px;\\n  width:64px;\\n  height:64px;\\n  margin-top:16px;\\n  font-size: 34px;\\n  transition:all 0.2s;\\n}</style><div class=\\\"container\\\"><div class=\\\"col-md-2 leftMenu\\\"><div class=\\\"sidebar-nav\\\"><div role=\\\"navigation\\\" class=\\\"navbar navbar-default\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".sidebar-navbar-collapse\\\" class=\\\"navbar-toggle\\\"><span class=\\\"sr-only\\\">Toggle navigation</span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span></button><span class=\\\"visible-xs navbar-brand\\\">Menu</span></div><div class=\\\"navbar-collapse collapse sidebar-navbar-collapse\\\"><ul class=\\\"nav navbar-nav\\\"><li><a href=\\\"#\\\">Mon profil</a></li><li><a href=\\\"/public/portfolio\\\" target=\\\"_blank\\\">Voir mon Portfolio</a></li><li class=\\\"active\\\"><a href=\\\"#choices\\\">Mes choix</a></li><li><a href=\\\"#accountSettings\\\">Paramètres</a></li></ul></div></div></div></div><div id=\\\"choicesContainer\\\" class=\\\"col-md-10 choicesContainer\\\"><div id=\\\"TabsContainer\\\" class=\\\"row\\\"><div class=\\\"row text-center\\\"><h1 class=\\\"col-md-12\\\">Mes choix</h1><h4 id=\\\"noDocumentsMessage\\\" hidden=\\\"true\\\" class=\\\"col-md-12\\\">Aucun documents à afficher. Vous pouvez synchroniser des documents DoYouBuzz ou en ajouter via la partie ci-dessous. Vous pouvez aussi récupérer vos badges de votre BackPack OpenBadges.</h4></div></div><div id=\\\"submitPart\\\" class=\\\"row\\\"><div class=\\\"col-md-12 submitButton text-center\\\"><button id=\\\"submitChanges\\\" onclick=\\\"submitChanges()\\\" class=\\\"btn btn-primary\\\">Valider mes choix</button><button id=\\\"syncDYBDocumentsButton\\\" type=\\\"button\\\" onclick=\\\"syncDYBDocuments()\\\" class=\\\"btn btn-warning\\\">Synchroniser mes documents DoYouBuzz</button><div id=\\\"savedMessage\\\" hidden=\\\"true\\\" class=\\\"alert alert-success\\\"></div><div id=\\\"errorMessage\\\" hidden=\\\"true\\\" class=\\\"alert alert-danger\\\"></div></div></div><div id=\\\"addDocumentPart\\\" class=\\\"row\\\"><div class=\\\"row text-left\\\"><h3 class=\\\"col-md-12\\\">Ajouter un document</h3></div><div id=\\\"addDocumentBlock\\\" style=\\\"display:none\\\" class=\\\"documentBlock col-md-9\\\"><div id=\\\"addDocumentContent\\\" class=\\\"documentContent col-md-12\\\"><div class=\\\"row\\\"><label>Titre<span class=\\\"mandatoryStar\\\">*</span> :</label><input id=\\\"title\\\" type=\\\"text\\\" placeholder=\\\"Titre du document\\\" name=\\\"title\\\"/></div><div class=\\\"row\\\"><label>URL :</label><input id=\\\"url\\\" type=\\\"text\\\" placeholder=\\\"Url de votre document\\\" name=\\\"url\\\"/></div><div class=\\\"row\\\"><label>Site web associé :</label><input id=\\\"relatedWebsite\\\" type=\\\"text\\\" placeholder=\\\"www.mywebsite.fr\\\" name=\\\"relatedWebsite\\\"/></div><div class=\\\"row\\\"><label>Catégorie<span class=\\\"mandatoryStar\\\">*</span> :</label><input id=\\\"category\\\" type=\\\"text\\\" placeholder=\\\"Sa catégorie\\\" name=\\\"category\\\"/></div><div class=\\\"row\\\"><label>Date de réalisation<span class=\\\"mandatoryStar\\\">*</span> :</label><input id=\\\"creationDate\\\" type=\\\"text\\\" placeholder=\\\"jj/mm/aaaa\\\" name=\\\"creationDate\\\" maxlength=\\\"10\\\"/></div><div class=\\\"row\\\"><label>Description<span class=\\\"mandatoryStar\\\">*</span> :</label><textarea id=\\\"description\\\" style=\\\"resize:none;width:60%;height:100px;\\\" placeholder=\\\"Description du document...\\\" name=\\\"description\\\"></textarea></div><div class=\\\"row text-center\\\"><button id=\\\"addDocumentButton\\\" onclick=\\\"addDocument()\\\" class=\\\"btn btn-primary\\\">Ajouter ce document</button><button id=\\\"cancelButton\\\" onclick=\\\"showAddDocumentForm(false)\\\" class=\\\"btn btn-secondary\\\">Cacher</button></div><div id=\\\"errorMessageAddDocument\\\" style=\\\"margin-top:5px;\\\" hidden=\\\"true\\\" class=\\\"row alert alert-danger\\\"></div></div></div><div id=\\\"placeHolderAddDocumentBlock\\\" onclick=\\\"showAddDocumentForm(true)\\\" class=\\\"documentBlock col-md-3\\\"><div id=\\\"placeHolderAddDocumentContent\\\" class=\\\"documentContent col-md-12\\\"><button id=\\\"addButton\\\">+</button></div></div></div></div></div><script type=\\\"text/javascript\\\">/** Global variables **/\\nvar groups = []; //all groups of badges will be store in this object\\nvar documents = []; //all documents will be store in this array\\n//we store in this next object all categories already built (or reserved) to avoid duplicated categories\\nvar categoriesAlreadyBuilt = {\\\"Présentation\\\" : true, \\\"Badges\\\" : true}; //exemple: categoriesAlreadyBuilt[\\\"Vidéos\\\"] = true;\\nvar documentsAlreadyBuilt = {}; // all documents built will be here with as value true and as key the matching document id\\nvar isADocumentInEditingMode = false; //boolean used to know if one document is already in the editing mode (avoid two documents in the editing mode in the same time)\\n\\n/** initialisation **/\\ninit(true,false,false); //first running so this is not an update\\n\\n\\n/***********************/\\n/** General functions **/\\n/***********************/\\n\\n//function run on page loading\\n// isFirstRunning : true if this this is the very fist running of the function (here this is the page loading) -> build all documents and badges\\n// isDocumentsUpdate : true if we want to build new document HTML structures on the page\\n// isBadgeUpdate : true if we want to rebuild the badges HTML strucutre (when we sync with the OpenBadges backpack)\\nfunction init(isFirstRunning, isDocumentsUpdate, isBadgeUpdate){\\n  //first, we remove all UI messages\\n  document.getElementById(\\\"savedMessage\\\").setAttribute(\\\"hidden\\\", true);\\n  document.getElementById(\\\"errorMessage\\\").setAttribute(\\\"hidden\\\", true);\\n  \\n  //get all documents from database and build them on the page\\n  if(isFirstRunning || isDocumentsUpdate)getAndBuildDocuments(isDocumentsUpdate);\\n  \\n  //get all badges from database and build them on page\\n  if(isFirstRunning || isBadgeUpdate)getAndBuildBadges(isBadgeUpdate);\\n  \\n  if(!isFirstRunning){\\n    document.getElementById(\\\"savedMessage\\\").innerHTML = \\\"Documents mis à jours\\\";\\n    document.getElementById(\\\"savedMessage\\\").removeAttribute(\\\"hidden\\\");\\n  }\\n}\\n\\n\\n//function for selection category behavior, it takes the clicked tab as parameter\\nfunction chooseCategory(element){\\n  //if this tab was already selected, we unselect it\\n  if(element.parentNode.className == \\\"row tab choiceCategory\\\"){\\n    element.parentNode.className = \\\"row tab\\\";\\n    return;\\n  }\\n  //if this is tab was not selected, we unselect all other tab and select this one\\n  var categoriesDIV = document.getElementById(\\\"choicesContainer\\\").getElementsByClassName(\\\"tab\\\");\\n  for(var i in categoriesDIV){\\n    categoriesDIV[i].className = \\\"row tab\\\";\\n  }\\n  element.parentNode.className = \\\"row tab choiceCategory\\\";\\n}\\n\\n\\n//function to submit all document and badges visibilities\\nfunction submitChanges(){\\n  //first, we remove all UI messages\\n  document.getElementById(\\\"savedMessage\\\").setAttribute(\\\"hidden\\\", true);\\n  document.getElementById(\\\"errorMessage\\\").setAttribute(\\\"hidden\\\", true);\\n  \\n  /**submit document visibilities**/\\n  var documentInputs = document.getElementsByClassName(\\\"documentVisibility\\\"); //all document visibility checkboxes\\n  var documentsToSubmit = {}; // will be sent to the database for the update\\n  //we get all visibility checkboxes value and update the object that will be sent to the database\\n  for(var i=0; i<documentInputs.length; i++){\\n    documentsToSubmit[documentInputs[i].getAttribute(\\\"documentID\\\")] = documentInputs[i].checked;\\n  }\\n  //request\\n  var xmlHttpUpdateDocuments = new XMLHttpRequest();\\n  xmlHttpUpdateDocuments.open( \\\"PUT\\\", \\\"updateDocumentsVisibilities\\\", false ); // false for synchronous request\\n  xmlHttpUpdateDocuments.setRequestHeader(\\\"Content-type\\\", \\\"application/json\\\");\\n  xmlHttpUpdateDocuments.send( JSON.stringify(documentsToSubmit) );\\n  \\n  /**submit badges visibilities**/\\n  var badgesInputs = document.getElementsByClassName(\\\"badgeVisibility\\\"); //all badge visibility checkboxes\\n  var badgesToSubmit = {}; // will be sent to the database for the update\\n  //we get all visibility checkboxes value and update the object that will be sent to the database\\n  for(var i=0; i<badgesInputs.length; i++){\\n    badgesToSubmit[badgesInputs[i].getAttribute(\\\"badge\\\")] = badgesInputs[i].checked;\\n  }\\n  //request\\n  var xmlHttpUpdateBadges = new XMLHttpRequest();\\n  xmlHttpUpdateBadges.open( \\\"PUT\\\", \\\"updateBadgesVisibilities\\\", false ); // false for synchronous request\\n  xmlHttpUpdateBadges.setRequestHeader(\\\"Content-type\\\", \\\"application/json\\\");\\n  xmlHttpUpdateBadges.send( JSON.stringify(badgesToSubmit) );\\n  \\n  //UI messages\\n  if((xmlHttpUpdateDocuments.status == 200 || xmlHttpUpdateDocuments.status == 304) && (xmlHttpUpdateBadges.status == 200 || xmlHttpUpdateBadges.status == 304)){\\n    document.getElementById(\\\"savedMessage\\\").innerHTML = \\\"Changements sauvegardés avec succès\\\";\\n    document.getElementById(\\\"savedMessage\\\").removeAttribute(\\\"hidden\\\");\\n  }else{//error\\n    document.getElementById(\\\"errorMessage\\\").innerHTML = \\\"Une erreur du serveur est survenue\\\";\\n    document.getElementById(\\\"errorMessage\\\").removeAttribute(\\\"hidden\\\");\\n  }\\n}\\n\\n\\n/**********************/\\n/** Badges functions **/\\n/**********************/\\n\\n//function to get all badges from database and build them on the html page\\n// isUpdate : true if this is an update and not the first building of the badges tab\\nfunction getAndBuildBadges(isUpdate){\\n  //get all badges from database and build them on page\\n  //request\\n  var xmlHttpGroups = new XMLHttpRequest();\\n  xmlHttpGroups.open( \\\"GET\\\", \\\"getBadgesGroup\\\", false ); // false for synchronous request\\n  xmlHttpGroups.send();\\n  if(xmlHttpGroups.status != 200 && xmlHttpGroups.status != 304){ //if error\\n    document.getElementById(\\\"errorMessage\\\").innerHTML = \\\"Une erreur du serveur est survenue pour récupérer les badges\\\";\\n    document.getElementById(\\\"errorMessage\\\").removeAttribute(\\\"hidden\\\");\\n    return;\\n  }\\n  groups = JSON.parse(xmlHttpGroups.responseText);\\n  \\n  if(isUpdate){ // if this an update, we empty the badges tab\\n    document.getElementById(\\\"badgesTabContent\\\").innerHTML = \\\"\\\";\\n  }else{ //if this is the first running, we build the badges tab\\n    var badgesTabHTML = '<div class=\\\"row tab\\\" id=\\\"badgesTab\\\">' +\\n                          '<a class=\\\"tabTitle col-md-12\\\" onclick=\\\"chooseCategory(this);\\\">Badges</a>' +\\n                          '<div class=\\\"docsContainer col-md-12\\\" id=\\\"badgesTabContent\\\"></div>' +\\n                          '<button class=\\\"btn btn-primary\\\" id=\\\"syncOBbutton\\\" onclick=\\\"syncObenBadgesBackPack()\\\">Récupérer de mon BackPack (OpenBadges)</button>' +\\n                      '</div>';\\n    document.getElementById(\\\"TabsContainer\\\").innerHTML += badgesTabHTML;\\n  }\\n\\n  var badges = {};\\n  //and we build each badge of each group\\n  groups.forEach(function(group, group_index, array){\\n    badges = group.badges;\\n    badges.forEach(function(badge, badge_index, array){\\n      buildBadge(badge.name, badge.imageUrl, badge.issuerName, badge.issuerUrl, badge.issuedOn, badge.description, badge.criteria, badge.visibility, group_index+\\\"_\\\"+badge_index);\\n      //we use group_index and badge_index here in order to get a unique id \\n    });\\n  });\\n  //successful message if this is an update\\n  if(isUpdate){\\n    var successMessage = document.getElementById(\\\"savedMessage\\\");\\n    successMessage.innerHTML = \\\"Badges mis à jour avec succès\\\";\\n    successMessage.removeAttribute(\\\"hidden\\\");\\n  }\\n  //if there is not any documents to display, we don't need the submit button (because there are no visibilities to update)\\n  //we disable the button\\n  if(groups.length == 0 && documents.length == 0){\\n    document.getElementById(\\\"submitChanges\\\").disabled = true;\\n    document.getElementById(\\\"submitChanges\\\").style.opacity = \\\"0.3\\\";\\n    document.getElementById(\\\"noDocumentsMessage\\\").removeAttribute(\\\"hidden\\\");\\n  }else{ //in all other cases we need the button\\n    document.getElementById(\\\"submitChanges\\\").disabled = false;\\n    document.getElementById(\\\"submitChanges\\\").style.opacity = \\\"1\\\";\\n    document.getElementById(\\\"noDocumentsMessage\\\").setAttribute(\\\"hidden\\\", true);\\n  }\\n}\\n\\n  \\n//function to build a badge on the page\\n//all parameters here is badges properties but index which allows here to get a unique id\\nfunction buildBadge(badgeName, imageUrl, issuerName, issuerUrl, issueDate, description, hostedUrl, visibility, index){\\n  //id for the badge visibility input we need a unique id\\n  var badgeId = \\\"badge_\\\"+index;\\n  //get the visibility value\\n  var checked = visibility ? \\\"checked\\\" : \\\"\\\";\\n  //badge html building\\n  var badgeHTML = \\n      '<div class=\\\"badgeBlock col-md-6\\\">' +\\n        '<div class=\\\"badgeContent col-md-12\\\">' +\\n          '<img class=\\\"badgeImage\\\" src=\\\"' + imageUrl + '\\\"/>'+\\n          '<div class=\\\"badgeDetails\\\">' +\\n            '<input id=\\\"'+ badgeId +'\\\" badge=\\\"' + badgeName + '\\\" class=\\\"visibilityCheckBox badgeVisibility\\\" type=\\\"checkbox\\\" name=\\\"' + badgeId + '\\\" '+ checked +' />' +\\n            '<label for=\\\"' + badgeId + '\\\"></label>' +\\n            '<p class=\\\"badgeIssuer\\\"> <span class=\\\"badgeName\\\">' + badgeName + '</span>' +\\n              ', délivré par <a href=\\\"' + issuerUrl + '\\\">' + issuerName + '</a>, le ' + issueDate + '' +\\n            '</p>' +\\n            '<p class=\\\"badgeDescription\\\">' + description + '</p>' +\\n            '<a class=\\\"badgeLink\\\" target=\\\"_blank\\\" href=\\\"' + hostedUrl + '\\\">Voir sur le site d\\\\'origine ></a>' +\\n          '</div>' +\\n        '</div>' +\\n      '</div>';\\n    \\n    //add to badges tab\\n    document.getElementById(\\\"badgesTabContent\\\").innerHTML += badgeHTML;\\n}\\n\\n\\n//function to sync badges with OpenBadges BackPack\\nfunction syncObenBadgesBackPack(){\\n  //we warn the user about the changes\\n  if(confirm(\\\"Attention : les paramètres de visibilité de vos badges seront par défaut désactivés, il vous faudra les rechoisir, voulez-vous continuez?\\\")){\\n      //we remove potential error messages\\n      document.getElementById(\\\"errorMessage\\\").setAttribute(\\\"hidden\\\", true);\\n      //request to update badges in database\\n      var xmlHttpSync = new XMLHttpRequest();\\n      xmlHttpSync.open( \\\"GET\\\", \\\"syncBadgesGroup\\\", true ); // true for asynchronous request\\n      xmlHttpSync.onreadystatechange = function(){\\n        if (xmlHttpSync.readyState == 4 && (xmlHttpSync.status == 200 || xmlHttpSync.status == 304)) { //if success\\n          //we rebuild all the badges tab content\\n          init(false, false, true); //badges update but not document update\\n        } else if (xmlHttpSync.readyState == 4 && xmlHttpSync.status == 404){ //if error 404\\n          var errorMessage = document.getElementById(\\\"errorMessage\\\");\\n          errorMessage.removeAttribute(\\\"hidden\\\");\\n          errorMessage.innerHTML = xmlHttpSync.responseText;\\n        }else if(xmlHttpSync.readyState == 4 && xmlHttpSync.status == 500){ //if error 500\\n          var errorMessage = document.getElementById(\\\"errorMessage\\\");\\n          errorMessage.removeAttribute(\\\"hidden\\\");\\n          errorMessage.innerHTML = \\\"Erreur serveur : \\\"+xmlHttpSync.responseText;\\n        }else if(xmlHttpSync.readyState == 4){//if other errors\\n          var errorMessage = document.getElementById(\\\"errorMessage\\\");\\n          errorMessage.removeAttribute(\\\"hidden\\\");\\n          errorMessage.innerHTML = \\\"Une erreur du serveur est survenue\\\";\\n        }\\n      }\\n      xmlHttpSync.send();\\n  }\\n}\\n\\n\\n/*************************/\\n/** Documents functions **/\\n/*************************/\\n\\n//function to add a new document from the form into the database and on the page\\nfunction addDocument(){\\n  //we remove potential error messages\\n  document.getElementById(\\\"errorMessageAddDocument\\\").setAttribute(\\\"hidden\\\", true);\\n  //document title input\\n  var title = document.getElementById(\\\"title\\\");\\n  //document url input\\n  var url = document.getElementById(\\\"url\\\");\\n  //related website input\\n  var relatedWebsite = document.getElementById(\\\"relatedWebsite\\\");\\n  //category input\\n  var category = document.getElementById(\\\"category\\\");\\n  //creation date input\\n  var creationDate = document.getElementById(\\\"creationDate\\\");\\n  //description textarea \\n  var description = document.getElementById(\\\"description\\\");\\n  //div for error messages to display in case of error\\n  var errorMessage = document.getElementById(\\\"errorMessageAddDocument\\\");\\n  //regex to check the date format\\n  var dateRegex = /^(0[1-9]|[12][0-9]|3[01])[/](0[1-9]|1[012])[/]\\\\d{4}$/;\\n  //regex to test the compatibility to be a html/css id\\n  var cssIDRegex = /^[A-Za-z]+[A-Za-zÀ-ÿ0-9_\\\\-\\\\:\\\\. ]*$/; //we will use the category as css id after, so we valid it now (we will replace spaces as well)\\n  //regex to check the url format\\n  var urlRegex = /(http(s)?:\\\\/\\\\/.)(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/;\\n  //check all mandatory inputs\\n  if(title.value == \\\"\\\"){ //title\\n    errorMessage.innerHTML = \\\"Veuillez ajouter un titre.\\\";\\n    document.getElementById(\\\"errorMessageAddDocument\\\").removeAttribute(\\\"hidden\\\");\\n    return;\\n  }else if(category.value == \\\"\\\" || !category.value.match(cssIDRegex)){ //category test 1\\n    errorMessage.innerHTML = 'Veuillez assigner une catégorie correcte. (Doit commencé par une lettre et peut contenir uniquement : des lettres, des chiffres, des espaces, \\\"-\\\", \\\"_\\\", \\\":\\\" et \\\".\\\")';\\n    document.getElementById(\\\"errorMessageAddDocument\\\").removeAttribute(\\\"hidden\\\");\\n    return;\\n  }else if(category.value == \\\"Badges\\\" || category.value == \\\"Présentation\\\"){ //category test 2\\n    errorMessage.innerHTML = 'Les catégories \\\"Badges\\\" et \\\"Aperçu\\\" ne peuvent pas être utilisées. Veuillez modifier.';\\n    document.getElementById(\\\"errorMessageAddDocument\\\").removeAttribute(\\\"hidden\\\");\\n    return;\\n  }else if(creationDate.value == \\\"\\\" || !creationDate.value.match(dateRegex)){ //creation date\\n    errorMessage.innerHTML = \\\"Veuillez ajouter une date correcte (format : JJ/MM/AAAA).\\\";\\n    document.getElementById(\\\"errorMessageAddDocument\\\").removeAttribute(\\\"hidden\\\");\\n    return;\\n  }else if(description.value == \\\"\\\"){ //description\\n    errorMessage.innerHTML = \\\"Veuillez ajouter une description.\\\";\\n    document.getElementById(\\\"errorMessageAddDocument\\\").removeAttribute(\\\"hidden\\\");\\n    return;\\n  }else if(url.value != \\\"\\\" && !url.value.match(urlRegex)){ //url\\n    errorMessage.innerHTML = 'L\\\\'adresse URL du document est incorrecte (peut être avez-vous oublier \\\"http://\\\" ou \\\"https://\\\" ?)';\\n    document.getElementById(\\\"errorMessageAddDocument\\\").removeAttribute(\\\"hidden\\\");\\n    return;\\n  }else if(relatedWebsite.value != \\\"\\\" && !relatedWebsite.value.match(urlRegex)){ //related website\\n    errorMessage.innerHTML = 'L\\\\'adresse URL du site web associé est incorrecte (peut être avez-vous oublier \\\"http://\\\" ou \\\"https://\\\" ?)';\\n    document.getElementById(\\\"errorMessageAddDocument\\\").removeAttribute(\\\"hidden\\\");\\n    return;\\n  }\\n  //data object that will be sent to the database to be added\\n  var dataToAdd = {\\n    \\\"title\\\" : title.value,\\n    \\\"url\\\" : url.value,\\n    \\\"relatedWebsite\\\" : relatedWebsite.value,\\n    \\\"category\\\" : category.value,\\n    \\\"creationDate\\\" : creationDate.value,\\n    \\\"description\\\" : description.value\\n  };\\n  //we remove potential UI messages\\n  document.getElementById(\\\"savedMessage\\\").setAttribute(\\\"hidden\\\", true);\\n  document.getElementById(\\\"errorMessage\\\").setAttribute(\\\"hidden\\\", true);\\n  //request\\n  var xmlHttpAddDocument = new XMLHttpRequest();\\n  xmlHttpAddDocument.open( \\\"POST\\\", \\\"addPortfolioDocument\\\", true ); //true for asynchronous request\\n  xmlHttpAddDocument.setRequestHeader(\\\"Content-type\\\", \\\"application/json\\\");\\n  xmlHttpAddDocument.onreadystatechange = function(){\\n        if (xmlHttpAddDocument.readyState == 4 && (xmlHttpAddDocument.status == 200 || xmlHttpAddDocument.status == 304)) { //if success\\n          //we reset the form\\n          title.value = \\\"\\\";\\n          url.value = \\\"\\\";\\n          relatedWebsite.value = \\\"\\\";\\n          category.value = \\\"\\\";\\n          creationDate.value = \\\"\\\";\\n          description.value = \\\"\\\";\\n          showAddDocumentForm(false); //we hide the form to show the placeholder\\n          init(false, true, false); //documents update\\n          //we display a successful message\\n          document.getElementById(\\\"savedMessage\\\").innerHTML = xmlHttpAddDocument.responseText;\\n          document.getElementById(\\\"savedMessage\\\").removeAttribute(\\\"hidden\\\");\\n        }\\n        if (xmlHttpAddDocument.readyState == 4 && xmlHttpAddDocument.status == 500) { //if error\\n          //display error message\\n          document.getElementById(\\\"errorMessage\\\").innerHTML = xmlHttpAddDocument.responseText;\\n          document.getElementById(\\\"errorMessage\\\").removeAttribute(\\\"hidden\\\");\\n        }\\n      }\\n  xmlHttpAddDocument.send(JSON.stringify(dataToAdd));\\n}\\n\\n//function to hide/display the document adding form and use instead the placeholder\\n//showFormAction : false to hide the form and display the placehfolder, and true for the opposite action  \\nfunction showAddDocumentForm(showFormAction){\\n  if(showFormAction){\\n    document.getElementById(\\\"placeHolderAddDocumentBlock\\\").setAttribute(\\\"style\\\", \\\"display:none\\\");\\n    document.getElementById(\\\"addDocumentBlock\\\").removeAttribute(\\\"style\\\");\\n    window.scrollTo(0,document.body.scrollHeight);//get the user to the bottom of the page\\n  }else{\\n    document.getElementById(\\\"addDocumentBlock\\\").setAttribute(\\\"style\\\", \\\"display:none\\\");\\n    document.getElementById(\\\"placeHolderAddDocumentBlock\\\").removeAttribute(\\\"style\\\");\\n    window.scrollTo(0, 0); //get the user to the top of the page to show all the adding form\\n  }\\n}\\n\\n//get all documents from database and build them on the page\\n// isUpdate : true if this is an update and not the first building of the documents tabs\\nfunction getAndBuildDocuments(isUpdate){\\n  var xmlHttpDocuments = new XMLHttpRequest();\\n  xmlHttpDocuments.open( \\\"GET\\\", \\\"getPortfolioDocuments\\\", false ); // false for synchronous request\\n  xmlHttpDocuments.send();\\n  if(xmlHttpDocuments.status != 200 && xmlHttpDocuments.status != 304){ //if error\\n    document.getElementById(\\\"errorMessage\\\").innerHTML = \\\"Une erreur du serveur est survenue pour récupérer les documents\\\";\\n    document.getElementById(\\\"errorMessage\\\").removeAttribute(\\\"hidden\\\");\\n    return;\\n  }\\n  //we get all documents\\n  documents = JSON.parse(xmlHttpDocuments.responseText);\\n  \\n  //for each document, we check if its category exists, if it doens't we create the category\\n  documents.forEach(function(myDocument, index, array){\\n    if(!categoriesAlreadyBuilt[myDocument.category]){ //new category\\n      categoriesAlreadyBuilt[myDocument.category] = true; //this category is going to be built\\n      var HTMLToBuild = '<div class=\\\"row tab\\\">' +\\n                          '<a class=\\\"tabTitle col-md-12\\\" onclick=\\\"chooseCategory(this);\\\">' + myDocument.category + '</a>' +\\n                          '<div class=\\\"docsContainer col-md-12\\\" id=\\\"'+ myDocument.category.replace(\\\" \\\", \\\"_\\\") +'\\\"></div>' +\\n                        '</div>';\\n      document.getElementById(\\\"TabsContainer\\\").innerHTML += HTMLToBuild;\\n    }\\n    //then we check if the document doesn't already exist, if it doesn't we create it\\n    if(!documentsAlreadyBuilt[myDocument.id]){ //new document\\n      documentsAlreadyBuilt[myDocument.id] = true;\\n      buildDocument(myDocument); //we built the HTML structure of the document\\n    }\\n  });\\n  //we put the badges category at the end of all categories, so if it's an update we move the badges tab to the end of all tabs\\n  //if it's not an update, the badges tab wouldn't exist and we would get an error\\n  if(isUpdate)document.getElementById('TabsContainer').appendChild(document.getElementById('badgesTab'));\\n  //if there is not any documents to display, we don't need the submit button (because there are no visibilities to update)\\n  //we disable the button\\n  if(groups.length == 0 && documents.length == 0){\\n    document.getElementById(\\\"submitChanges\\\").disabled = true;\\n    document.getElementById(\\\"submitChanges\\\").style.opacity = \\\"0.3\\\";\\n    document.getElementById(\\\"noDocumentsMessage\\\").removeAttribute(\\\"hidden\\\");\\n  }else{ //in all other cases we need the button\\n    document.getElementById(\\\"submitChanges\\\").disabled = false;\\n    document.getElementById(\\\"submitChanges\\\").style.opacity = \\\"1\\\";\\n    document.getElementById(\\\"noDocumentsMessage\\\").setAttribute(\\\"hidden\\\", true);\\n  }\\n}\\n\\n//function to build a document inside its correct container/category/tab\\n//myDocument : document object from the documents list sent by the server\\nfunction buildDocument(myDocument){\\n  var documentUrl = myDocument.url != \\\"\\\" ? myDocument.url : \\\"javascript:;\\\"; //we can not have an HTML href attribute empty, we use javascript:; instead\\n  var documentRelatedWebsite = myDocument.relatedWebsite != \\\"\\\" ? myDocument.relatedWebsite : \\\"javascript:;\\\"; //same thing for the related website\\n  var hiddenUrl = myDocument.url == \\\"\\\" ? 'hidden=\\\"true\\\"' : \\\"\\\"; //if we have to hide the url because it's empty\\n  var hiddenRelatedWebsite = myDocument.relatedWebsite == \\\"\\\" ? 'hidden=\\\"true\\\"' : \\\"\\\"; //same thing for the related website\\n  //if there is a source, we display it, the sourceID attribute will be used later to update the document\\n  var sourceP = myDocument.source == \\\"\\\" ? \\\"\\\" : '<p class=\\\"documentSource\\\" documentID=\\\"'+ myDocument.id+'\\\">Source du document : '+myDocument.source+'</p>';\\n  //for embeded element like video player, audio player, or an image (if the document is a video, an audio or an image)\\n  var embededElement = getCorrectEmbedCode(myDocument.url);\\n  //visibility preference\\n  var visibilityValue = myDocument.visibility ? \\\"checked\\\" : \\\"\\\";\\n  //HTML Structure building of the document\\n  var htmlContent = '<div class=\\\"documentBlock col-md-12\\\">' +\\n                      '<div class=\\\"documentContent col-md-12\\\">' +\\n                        '<input id=\\\"Visibility'+ myDocument.id +'\\\" documentID=\\\"'+ myDocument.id +'\\\" class=\\\"visibilityCheckBox documentVisibility\\\" type=\\\"checkbox\\\" '+ visibilityValue +'/>' +\\n                        '<label for=\\\"Visibility' + myDocument.id + '\\\"></label>' +\\n                        '<div class=\\\"removeButton\\\" documentID=\\\"'+ myDocument.id +'\\\" onclick=\\\"removeDocument(this)\\\"></div>' +\\n                        '<input id=\\\"Edition'+ myDocument.id +'\\\" class=\\\"editionCheckBox\\\" type=\\\"checkbox\\\"/>' +\\n                        '<label onclick=\\\"editDocument(this)\\\" documentID=\\\"'+ myDocument.id +'\\\"></label>' +\\n                        '<p class=\\\"documentTitle\\\" id=\\\"title'+ myDocument.id +'\\\">'+ myDocument.title +'</p>' + \\n                        embededElement +\\n                        '<p class=\\\"documentDescription\\\" id=\\\"description'+ myDocument.id +'\\\">' + myDocument.description + '</p>' +\\n                        '<a href=\\\"'+ documentUrl +'\\\" id=\\\"url'+ myDocument.id +'\\\" target=\\\"_blank\\\" '+hiddenUrl+'> Lien du document</br></a>' +\\n                        '<p id=\\\"editUrlLabel'+ myDocument.id +'\\\" hidden=\\\"true\\\" style=\\\"margin-bottom:5px;\\\">Url du document :</p>' +\\n                        '<p id=\\\"editUrl'+ myDocument.id +'\\\" hidden=\\\"true\\\" style=\\\"margin-top:5px;\\\">'+ myDocument.url +'</p>' +\\n                        '<a href=\\\"'+ documentRelatedWebsite +'\\\" id=\\\"relatedWebsite'+ myDocument.id +'\\\" target=\\\"_blank\\\" '+hiddenRelatedWebsite+'> Site web associé</a>' +\\n                        '<p id=\\\"editRelatedWebsiteLabel'+ myDocument.id +'\\\" hidden=\\\"true\\\" style=\\\"margin-bottom:5px;\\\">Site web associé :</p>' +\\n                        '<p id=\\\"editRelatedWebsite'+ myDocument.id +'\\\" hidden=\\\"true\\\" style=\\\"margin-top:5px;\\\">'+ myDocument.relatedWebsite +'</p>' +\\n                        '<p class=\\\"documentDate\\\">Réalisé le : <span id=\\\"date'+ myDocument.id +'\\\" onkeypress=\\\"return (this.innerHTML.length < 10)\\\">'+ myDocument.creationDate +'</span></p>' +\\n                        sourceP +\\n                        '<div class=\\\"alert alert-danger\\\" hidden=\\\"true\\\" id=\\\"alert'+myDocument.id+'\\\"></div>' +\\n                      '</div>' +\\n                    '</div>';\\n  document.getElementById(myDocument.category.replace(\\\" \\\", \\\"_\\\")).innerHTML += htmlContent; //we append this document to its matching tab\\n}\\n\\n//function to remove a document\\n//element : html structure of the document to remove\\nfunction removeDocument(element){\\n  document.getElementById(\\\"errorMessage\\\").setAttribute(\\\"hidden\\\", \\\"true\\\");\\n  document.getElementById(\\\"savedMessage\\\").setAttribute(\\\"hidden\\\", \\\"true\\\");\\n  if(confirm(\\\"Voulez-vouz vraiment supprimer ce document? Cette action est irreversible.\\\")){\\n    var documentIDtoRemove = element.getAttribute(\\\"documentID\\\"); //we get the id of the document to send to the server\\n    \\n    //request\\n    var xmlHttpRemoveDocument = new XMLHttpRequest();\\n    xmlHttpRemoveDocument.open( \\\"GET\\\", \\\"deletePortfolioDocument/\\\"+documentIDtoRemove, false ); // false for synchronous request\\n    xmlHttpRemoveDocument.send();\\n    if(xmlHttpRemoveDocument.status != 200 && xmlHttpRemoveDocument.status != 304){ //if error\\n      document.getElementById(\\\"errorMessage\\\").innerHTML = \\\"Une erreur du serveur est survenue pour supprimer le document demandé\\\";\\n      document.getElementById(\\\"errorMessage\\\").removeAttribute(\\\"hidden\\\");\\n      return;\\n    }\\n    \\n    //we remove now all HTML nodes not used anymore\\n    var childToRemove = element.parentNode.parentNode;\\n    var parent = childToRemove.parentNode;\\n    parent.removeChild(childToRemove);\\n    if(!parent.hasChildNodes()){ //if this category is now empty, we remove it\\n      var categoryToRemove = parent.parentNode;\\n      categoryToRemove.parentNode.removeChild(categoryToRemove);\\n    }\\n    //this document is not build anymore because it's removed\\n    documentsAlreadyBuilt[documentIDtoRemove] = false;\\n    \\n    //UI Message\\n    document.getElementById(\\\"savedMessage\\\").innerHTML = \\\"Document supprimé avec succès\\\";\\n    document.getElementById(\\\"savedMessage\\\").removeAttribute(\\\"hidden\\\");\\n  }\\n}\\n\\n//function to handle the editing mode of a document\\n//labelElement : HTML label tag with is used to go into or out of the editing mode\\nfunction editDocument(labelElement){\\n  var documentID = labelElement.getAttribute(\\\"documentID\\\"); //id of the document to edit\\n  var wasEditingMode = document.getElementById(\\\"Edition\\\"+documentID).checked;//if this document was editing mode before, that means we want to get out of it\\n  \\n  //if another document is still in editing mode, we can not edit this one until the other document edition is finished\\n  if(!wasEditingMode && isADocumentInEditingMode){\\n    alert(\\\"Un autre document est déjà en cours d'édition. Veuillez le terminer avant d'en éditer un autre. Merci.\\\");\\n    return;\\n  }\\n  \\n  //document elements\\n  var titleElement = document.getElementById(\\\"title\\\"+documentID);\\n  var descriptionElement = document.getElementById(\\\"description\\\"+documentID);\\n  var dateElement = document.getElementById(\\\"date\\\"+documentID);\\n  var urlLink = document.getElementById(\\\"url\\\"+documentID);\\n  var relatedWebsiteLink = document.getElementById(\\\"relatedWebsite\\\"+documentID);\\n  var urlElement = document.getElementById(\\\"editUrl\\\"+documentID);\\n  var urlElementLabel = document.getElementById(\\\"editUrlLabel\\\"+documentID);\\n  var relatedWebsiteElement = document.getElementById(\\\"editRelatedWebsite\\\"+documentID);\\n  var relatedWebsiteElementLabel = document.getElementById(\\\"editRelatedWebsiteLabel\\\"+documentID);\\n  var alertElement = document.getElementById(\\\"alert\\\"+documentID);\\n  var embededElement = titleElement.parentElement.getElementsByClassName(\\\"embededElement\\\")[0];\\n  \\n  //we are entering in the editing mode only if no other elements are in the editing mode\\n  if(!wasEditingMode && !isADocumentInEditingMode){\\n    isADocumentInEditingMode = true; // to avoid multiple element editings\\n    // we hide link elements and display their <p> equivalent\\n    urlLink.setAttribute(\\\"hidden\\\", true);\\n    relatedWebsiteLink.setAttribute(\\\"hidden\\\", true);\\n    urlElement.removeAttribute(\\\"hidden\\\");\\n    relatedWebsiteElement.removeAttribute(\\\"hidden\\\");\\n    urlElementLabel.removeAttribute(\\\"hidden\\\");\\n    relatedWebsiteElementLabel.removeAttribute(\\\"hidden\\\");\\n    \\n    //we put all elements on editable mode\\n    titleElement.setAttribute(\\\"contenteditable\\\", true);\\n    descriptionElement.setAttribute(\\\"contenteditable\\\", true);\\n    dateElement.setAttribute(\\\"contenteditable\\\", true);\\n    urlElement.setAttribute(\\\"contenteditable\\\", true);\\n    relatedWebsiteElement.setAttribute(\\\"contenteditable\\\", true);\\n    \\n    //and check the checkbox which is the editing mode button\\n    document.getElementById(\\\"Edition\\\"+documentID).checked = true;\\n    \\n  }else{ //we are leaving the editing mode   \\n    //check data entered\\n    alertElement.setAttribute(\\\"hidden\\\", true);//remove potential error messages\\n    //to check the date\\n    var dateRegex = /^(0[1-9]|[12][0-9]|3[01])[/](0[1-9]|1[012])[/]\\\\d{4}$/;\\n    //to check urls\\n    var urlRegex = /(http(s)?:\\\\/\\\\/.)(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/;\\n    //We need to replace <br> because that will be here by default in an empty p\\n    if(urlElement.innerHTML == \\\"</br>\\\" || urlElement.innerHTML == \\\"<br>\\\")  urlElement.innerHTML = \\\"\\\";\\n    if(relatedWebsiteElement.innerHTML == \\\"</br>\\\" || relatedWebsiteElement.innerHTML == \\\"<br>\\\")  relatedWebsiteElement.innerHTML = \\\"\\\";\\n    if(titleElement.innerHTML == \\\"</br>\\\" || titleElement.innerHTML == \\\"<br>\\\")  titleElement.innerHTML = \\\"\\\";\\n    if(descriptionElement.innerHTML == \\\"</br>\\\" || descriptionElement.innerHTML == \\\"<br>\\\")  descriptionElement.innerHTML = \\\"\\\";\\n    if(dateElement.innerHTML == \\\"</br>\\\" || dateElement.innerHTML == \\\"<br>\\\")  dateElement.innerHTML = \\\"\\\";\\n    \\n    //conditions checking\\n    if(titleElement.innerHTML == \\\"\\\"){ //title\\n      alertElement.innerHTML = \\\"Veuillez entrer un titre.\\\";\\n      alertElement.removeAttribute(\\\"hidden\\\");\\n      return;\\n    }else if(descriptionElement.innerHTML == \\\"\\\"){ //description\\n      alertElement.innerHTML = \\\"Veuillez entrer une description.\\\";\\n      alertElement.removeAttribute(\\\"hidden\\\");\\n      return;\\n    }else if(dateElement.innerHTML == \\\"\\\" || !dateElement.innerHTML.match(dateRegex)){ //creation date\\n      alertElement.innerHTML = \\\"Veuillez entrer une date correcte (format JJ/MM/AAAA).\\\";\\n      alertElement.removeAttribute(\\\"hidden\\\");\\n      return;\\n    }else if(urlElement.innerHTML != \\\"\\\" && !urlElement.innerHTML.match(urlRegex)){ //url\\n      alertElement.innerHTML = 'L\\\\'adresse URL du document est incorrecte (peut être avez-vous oublier \\\"http://\\\" ou \\\"https://\\\" ?)';\\n      alertElement.removeAttribute(\\\"hidden\\\");\\n      return;\\n    }else if(relatedWebsiteElement.innerHTML != \\\"\\\" && !relatedWebsiteElement.innerHTML.match(urlRegex)){ //related website\\n      alertElement.innerHTML = 'L\\\\'adresse URL du site web associé est incorrecte (peut être avez-vous oublier \\\"http://\\\" ou \\\"https://\\\" ?)';\\n      alertElement.removeAttribute(\\\"hidden\\\");\\n      return;\\n    }\\n    \\n    // we display link elements and hide their <p> equivalent\\n    urlElement.setAttribute(\\\"hidden\\\", true);\\n    relatedWebsiteElement.setAttribute(\\\"hidden\\\", true);\\n    urlElementLabel.setAttribute(\\\"hidden\\\", true);\\n    relatedWebsiteElementLabel.setAttribute(\\\"hidden\\\", true);\\n    \\n    //we remove all editable modes\\n    titleElement.removeAttribute(\\\"contenteditable\\\");\\n    descriptionElement.removeAttribute(\\\"contenteditable\\\");\\n    dateElement.removeAttribute(\\\"contenteditable\\\");\\n    urlElement.removeAttribute(\\\"contenteditable\\\");\\n    relatedWebsiteElement.removeAttribute(\\\"contenteditable\\\");\\n    \\n    //update links href\\n    //<a> with href=\\\"\\\" is not valid so we use href=\\\"javascript:;\\\" to know if it's empty or not\\n    urlLink.href = urlElement.innerHTML != \\\"\\\" ? urlElement.innerHTML : \\\"javascript:;\\\";\\n    relatedWebsiteLink.href = relatedWebsiteElement.innerHTML != \\\"\\\" ? relatedWebsiteElement.innerHTML : \\\"javascript:;\\\";\\n    if(urlLink.href == \\\"javascript:;\\\") urlLink.setAttribute(\\\"hidden\\\", true); //if it's empty, we hide it\\n    if(relatedWebsiteLink.href == \\\"javascript:;\\\") relatedWebsiteLink.setAttribute(\\\"hidden\\\", true); //if it's empty, we hide it\\n    if(urlLink.href != \\\"javascript:;\\\") urlLink.removeAttribute(\\\"hidden\\\"); //if it's not empty, we display it\\n    if(relatedWebsiteLink.href != \\\"javascript:;\\\") relatedWebsiteLink.removeAttribute(\\\"hidden\\\"); //if it's not empty, we display it\\n    //we update embed elements if they exists\\n    if(embededElement != null){\\n      if(embededElement.getElementsByTagName(\\\"img\\\").length){\\n        embededElement.getElementsByTagName(\\\"img\\\")[0].src = urlElement.innerHTML != \\\"\\\" ? urlElement.innerHTML : \\\"#\\\";\\n      }\\n    }\\n    \\n    //element to send to the database for the update\\n    var dataToUpdate = {\\n      \\\"title\\\" : titleElement.innerHTML,\\n      \\\"url\\\" : urlElement.innerHTML,\\n      \\\"relatedWebsite\\\" : relatedWebsiteElement.innerHTML,\\n      \\\"creationDate\\\" : dateElement.innerHTML,\\n      \\\"description\\\" : descriptionElement.innerHTML\\n    };\\n    //request\\n    var xmlHttpUpdateDocument = new XMLHttpRequest();\\n    xmlHttpUpdateDocument.open( \\\"PUT\\\", \\\"updatePortfolioDocument/\\\"+documentID, false ); // false for synchronous request\\n    xmlHttpUpdateDocument.setRequestHeader(\\\"Content-type\\\", \\\"application/json\\\");\\n    xmlHttpUpdateDocument.onreadystatechange = function(){\\n        if (xmlHttpUpdateDocument.readyState == 4 && (xmlHttpUpdateDocument.status == 200 || xmlHttpUpdateDocument.status == 304)) { //if success\\n          document.getElementById(\\\"Edition\\\"+documentID).checked = false;\\n  \\t      isADocumentInEditingMode = false; //to allow an other element editing\\n        }else if (xmlHttpUpdateDocument.readyState == 4 && xmlHttpUpdateDocument.status == 404){\\n          alertElement.innerHTML = 'Le document n\\\\'a pas été trouvé dans la base de données. Veuillez recharger la page ou l\\\\'application.';\\n          alertElement.removeAttribute(\\\"hidden\\\");\\n        }else if (xmlHttpUpdateDocument.readyState == 4){ //other errors\\n          alertElement.innerHTML = 'Erreur serveur. Veuillez recharger la page ou l\\\\'application.';\\n          alertElement.removeAttribute(\\\"hidden\\\"); \\n        }\\n    }\\n    xmlHttpUpdateDocument.send( JSON.stringify(dataToUpdate) );\\n    \\n  }\\n}\\n\\n\\n/*************************/\\n/** DoYouBuzz functions **/\\n/*************************/\\n\\n//function to get documents from DoYouBuzz\\nfunction syncDYBDocuments(){\\n  //remove potential UI Messages\\n  var successMessage = document.getElementById(\\\"savedMessage\\\");\\n  var errorMessage = document.getElementById(\\\"errorMessage\\\");\\n  successMessage.setAttribute(\\\"hidden\\\", \\\"true\\\");\\n  errorMessage.setAttribute(\\\"hidden\\\", \\\"true\\\");\\n  //request\\n  var xmlHttpSyncDYB = new XMLHttpRequest();\\n  xmlHttpSyncDYB.open( \\\"GET\\\", \\\"syncDYBDocuments\\\", false ); // false for synchronous request\\n  xmlHttpSyncDYB.send();\\n  \\n  //and display UI messages\\n  if (xmlHttpSyncDYB.status == 200 || xmlHttpSyncDYB.status == 304){\\n    var updates = JSON.parse(xmlHttpSyncDYB.responseText);\\n    //we update the html element of each concerned document and update them\\n    updates.forEach(function(documentUpdate, index, array){\\n      if(document.getElementById(\\\"title\\\"+documentUpdate._id) == null) return;//this document is not already built, we continue, it will be built after\\n      document.getElementById(\\\"title\\\"+documentUpdate._id).innerHTML = documentUpdate.title;\\n      document.getElementById(\\\"description\\\"+documentUpdate._id).innerHTML = documentUpdate.description;\\n      document.getElementById(\\\"date\\\"+documentUpdate._id).innerHTML = documentUpdate.creationDate;\\n      document.getElementById(\\\"url\\\"+documentUpdate._id).href = documentUpdate.url != \\\"\\\" ? documentUpdate.url : \\\"javascript:;\\\";\\n      document.getElementById(\\\"relatedWebsite\\\"+documentUpdate._id).href = documentUpdate.relatedWebsite != \\\"\\\" ? documentUpdate.relatedWebsite : \\\"javascript:;\\\";\\n      document.getElementById(\\\"editUrl\\\"+documentUpdate._id).innerHTML = documentUpdate.url;\\n      document.getElementById(\\\"editRelatedWebsite\\\"+documentUpdate._id).innerHTML = documentUpdate.relatedWebsite;\\n      document.getElementById(\\\"Visibility\\\"+documentUpdate._id).checked = documentUpdate.visibility;\\n      //we update embeded elements if they exist\\n      var embededElement = document.getElementById(\\\"title\\\"+documentUpdate._id).parentElement.getElementsByClassName(\\\"embededElement\\\")[0];\\n      if(embededElement != null){\\n        if(embededElement.getElementsByTagName(\\\"img\\\").length){\\n          embededElement.getElementsByTagName(\\\"img\\\")[0].src = documentUpdate.url != \\\"\\\" ? documentUpdate.url : \\\"#\\\";\\n        }\\n      }\\n    });\\n    init(false, true, false); //documents update\\n    successMessage.innerHTML = \\\"Documents DoYouBuzz synchronisés\\\";\\n    successMessage.removeAttribute(\\\"hidden\\\");\\n  }else if(xmlHttpSyncDYB.status == 404){\\n    errorMessage.innerHTML = xmlHttpSyncDYB.responseText;\\n    errorMessage.removeAttribute(\\\"hidden\\\");\\n  }else{\\n    errorMessage.innerHTML = \\\"Une erreur est survenue lors de la synchronisation avec DoYouBuzz\\\";\\n    errorMessage.removeAttribute(\\\"hidden\\\");\\n  }\\n  \\n}\\n\\n/********************************/\\n/** Function for embed element **/\\n/********************************/\\n\\nfunction getCorrectEmbedCode(url){\\n  if(url == \\\"\\\") return \\\"\\\";\\n  //all regular expressions needed to check the url and get the correct type of document\\n  //image regex\\n  var regexImage = /\\\\.(jpe?g|png|gif|bmp|tiff)$/i; //only jpeg, jpg, png, gif, bmp, tiff\\n  //audio regex -> not functional for now as we need a client id from soundcloud API\\n  var regexSoundcloud = /^https?:\\\\/\\\\/(soundcloud.com|snd.sc)\\\\/(.*)$/; //only soundcloud (snc.sc is also soundcloud)\\n  //video regex\\n  var regexYoutube = /(?:youtube(?:-nocookie)?\\\\.com\\\\/(?:[^\\\\/\\\\n\\\\s]+\\\\/\\\\S+\\\\/|(?:v|e(?:mbed)?)\\\\/|\\\\S*?[?&]v=)|youtu\\\\.be\\\\/)([a-zA-Z0-9_-]{11})/;\\n  var regexVimeo = /^(?:https?:\\\\/\\\\/)?(?:www\\\\.)?(vimeo.com\\\\/)((channels\\\\/[A-z]+\\\\/)|(groups\\\\/[A-z]+\\\\/videos\\\\/))?([0-9]+)/;\\n  var regexDailymotion = /^(?:https?:\\\\/\\\\/)?(?:www\\\\.)?dailymotion.com\\\\/(video|hub)\\\\/([^_]+)[^#]*(#video=([^_&]+))?/;\\n  \\n  //all test and matching embeded code returned\\n  //if it's an image\\n  if(regexImage.test(url)){\\n    return('<div class=\\\"text-center embededElement\\\"><img src=\\\"'+url+'\\\"/></div>');\\n  }\\n  //if it's a soundcloud audio\\n  if(regexSoundcloud.test(url)){\\n    return \\\"\\\";\\n  }\\n  //if it's a youtube video\\n  /*match = url.match(regexYoutube); //thanks to the regex, we grab the video id -> match[1]\\n  if(match != null) {\\n    return \\\"\\\";\\n    //return '<div class=\\\"text-center\\\"><iframe width=\\\"700\\\" height=\\\"315\\\" src=\\\"//www.youtube.com/embed/'+match[1]+'\\\" frameborder=\\\"0\\\" allowfullscreen></iframe></div>';\\n  }*/\\n  //if it's a vimeo video\\n  if(regexVimeo.test(url)){\\n    return \\\"\\\";\\n  }\\n  //if it's a dailymotion video\\n  if(regexDailymotion.test(url)){\\n    return \\\"\\\";\\n  }\\n  return \\\"\\\";\\n}</script>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<script src=\\\"//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\\\"></script><script src=\\\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js\\\"></script><link href=\\\"//maxcdn.bootstrapcdn.com/bootswatch/3.3.0/flatly/bootstrap.min.css\\\" rel=\\\"stylesheet\\\"/><style>/*************************/\\n/**       GLOBAL        **/\\n/*************************/\\n\\n/* Vertical navigation bar with responsive design */ \\n@media (min-width: 768px) {\\n  .sidebar-nav .navbar .navbar-collapse {\\n    padding: 0;\\n    max-height: none;\\n  }\\n  .sidebar-nav .navbar ul {\\n    float: none;\\n  }\\n  .sidebar-nav .navbar ul:not {\\n    display: block;\\n  }\\n  .sidebar-nav .navbar li {\\n    float: none;\\n    display: block;\\n  }\\n  .sidebar-nav .navbar li a {\\n    padding-top: 12px;\\n    padding-bottom: 12px;\\n  }\\n  \\n  div.navbar{\\n    border-radius:0px;\\n    margin-top:20px;\\n    background-color:rgba(0,0,0,0);\\n  }\\n  \\n  div.navbar ul.nav li a{\\n    color:#444;\\n    font-weight:700;\\n  }\\n  \\n  div.navbar ul.nav li a:hover{\\n    color:#BBB;\\n    font-weight:700;\\n    background-color:rgb(44, 62, 80);\\n  }\\n}\\n\\n@media (max-width: 767px) {\\n  h3.nav-header{\\n    display: none;\\n  }\\n}\\n\\ndiv.leftMenu{\\n  padding:0;\\n}\\n\\n\\n/*General elements*/\\ndiv.container{\\n  width:100%;\\n  padding:0;\\n}\\n\\np{\\n  margin-top:15px;\\n}\\n\\nbody{\\n  background-color: #ecf0f1;\\n}\\n\\n/***********************/\\n/**    COMPONENTS     **/\\n/***********************/\\n\\n/*---------------------------*/\\n/*Spinner loading icon*/\\n.spinner {\\n  height: 28px;\\n  width: 28px;\\n  animation: rotate 0.8s infinite linear;\\n  border: 5px solid #f39c12;\\n  border-right-color: transparent;\\n  border-radius: 50%;\\n}\\n\\n@keyframes rotate {\\n  0%    { transform: rotate(0deg); }\\n  100%  { transform: rotate(360deg); }\\n}\\n/*---------------------------*/\\n\\n\\n/*---------------------------*/\\n/* Button to set visibility */\\n/*\\n  HTML Structure (Jade)\\n    input#exempleID.visibilityCheckBox(type=\\\"checkbox\\\", name=\\\"#exempleID\\\")\\n    label(for=\\\"#exempleID\\\")\\n*/\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"]{\\n  display:none;\\n}\\n\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"] + label{\\n  content:\\\"\\\";\\n  width:27px;\\n  height:27px;\\n  border:3px solid #bbb;\\n  background-color: #777;\\n  cursor: pointer;\\n  box-shadow: 0px 0px 2px #333 inset;\\n  transition: all 0.3s ease-out;\\n}\\n\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"]:checked + label{\\n  background-color: #27ae60;\\n  box-shadow: 0px 0px 5px #333 inset;\\n  transition: all 0.3s ease-out;\\n}\\n\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"] + label:hover::after, input.visibilityCheckBox[type=\\\"checkbox\\\"]:checked + label:hover::after{\\n  display: block;\\n  position: absolute;\\n  text-align: center;\\n  white-space: nowrap;\\n  background: rgba(0,0,0,.7);\\n  -moz-border-radius:5px;\\n  -webkit-border-radius:5px;\\n  border-radius:5px;\\n  color: #fff;\\n  font-size: .86em;\\n  padding:0.3em;\\n}\\n\\n/*Explaination popup*/\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"] + label:hover::after{\\n  content: \\\"Afficher sur mon portfolio\\\";\\n}\\n\\ninput.visibilityCheckBox[type=\\\"checkbox\\\"]:checked + label:hover::after{\\n  content: \\\"Enlever de mon portfolio\\\";\\n}\\n/*---------------------------*/\\n\\n\\n/*---------------------------*/\\n/*Star for mandatory forms elements*/\\nspan.mandatoryStar{\\n  vertical-align:super;\\n  color:#e74c3c;\\n}\\n/*---------------------------*/\\n\\n\\n/*---------------------------*/\\n/* Button to remove a document */\\n/*\\n  HTML Structure (Jade)\\n    div.removeButton(documentID=\\\"exempleID\\\" onclick=\\\"removeDocument(this)\\\")\\n*/\\ndiv.removeButton{\\n  border:3px solid #bbb;\\n  width:27px;\\n  height:27px;\\n  background-color: #c0392b;\\n  cursor: pointer;\\n  transition: box-shadow 0.3s;\\n}\\n\\ndiv.removeButton:hover{\\n  box-shadow: 0px 0px 3px #333 inset;\\n  transition: box-shadow 0.3s;\\n}\\n\\ndiv.removeButton::before, div.removeButton::after {\\n    content: '';\\n    position: absolute;\\n    height: 3px;\\n    width: 100%;\\n    top: 50%;\\n    left: 0;\\n    margin-top:-2px;\\n    background: #bbb;;\\n}\\n\\n/*cross shape*/  \\ndiv.removeButton::before {\\n  transform: rotate(45deg);\\n  -webkit-transform: rotate(45deg);\\n}\\n\\ndiv.removeButton::after {\\n  transform: rotate(-45deg);\\n  -webkit-transform: rotate(-45deg);\\n}\\n/*---------------------------*/\\n\\n\\n/*---------------------------*/\\n/** Button for editing mode **/\\n/*\\n  HTML Structure (Jade)\\n    input#exempleID.editionCheckBox(type=\\\"checkbox\\\", name=\\\"exempleID\\\")\\n    label(documentID=\\\"exempleID\\\" onclick=\\\"editDocument(this)\\\")\\n*/\\ninput.editionCheckBox[type=\\\"checkbox\\\"]{\\n  display:none;\\n}\\n\\ninput.editionCheckBox[type=\\\"checkbox\\\"] + label{\\n  content:\\\"\\\";\\n  color:black;\\n  width:75px;\\n  height:27px;\\n  border:3px solid #bbb;\\n  background-color: #bdc3c7;\\n  cursor: pointer;\\n  box-shadow: 0px 0px 2px #333 inset;\\n  transition: all 0.3s ease-out;\\n}\\n\\ninput.editionCheckBox[type=\\\"checkbox\\\"]:checked + label{\\n  content:\\\"\\\";\\n  background-color: #f39c12;\\n  box-shadow: 0px 0px 5px #333 inset;\\n  transition: all 0.3s ease-out;\\n}\\n\\n/*Label inside the button*/\\ninput.editionCheckBox[type=\\\"checkbox\\\"] + label::after{\\n  content:\\\"Modifier\\\";\\n  margin-left:5px;\\n}\\n\\ninput.editionCheckBox[type=\\\"checkbox\\\"]:checked + label::after{\\n  content:\\\"Terminer\\\";\\n  margin-left:3px;\\n}\\n/*---------------------------*//***************/\\n/* Profil View */\\n/***************/\\n\\n/*text boxes*/\\n.profilContainer input{\\n  width: 300px;\\n}\\n\\n/*part which contains the submit button*/\\n.profilContainer div.submitButton{\\n  margin-top:30px;\\n}\\n\\n/*submit button*/\\n.profilContainer div.submitButton button{\\n  margin-bottom:20px;\\n}\\n\\n/*button to sync with DoYouBuzz information*/\\n.profilContainer #DYBSyncing{\\n  margin-left:20px;\\n}\\n\\n/*changes for the visibility checkbox*/\\n.profilContainer .visibilityCheckBox[type=\\\"checkbox\\\"]{\\n  width:50px;\\n  margin-left:30px;\\n  vertical-align: top;\\n}\\n\\n.profilContainer .visibilityCheckBox[type=\\\"checkbox\\\"] + label{\\n  position:absolute;\\n}\\n\\n.profilContainer .visibilityCheckBox[type=\\\"checkbox\\\"] + label:hover::after, .profilContainer .visibilityCheckBox[type=\\\"checkbox\\\"]:checked + label:hover::after{\\n  padding: .5em;\\n  min-width: 120px;\\n  width: auto;\\n  height: auto;\\n  top: -35px;\\n  left:10px;\\n}\\n\\n/*DYB resume choice design*/\\n.profilContainer #resumesContainer .resume{\\n  display:block;\\n  width:200px;\\n  height:100px;\\n  float:left;\\n  border:2px solid #777;\\n  box-shadow: 0px 0px 0px #555;\\n  -moz-border-radius:5px;\\n  -webkit-border-radius:5px;\\n  border-radius:5px;\\n  cursor:pointer;\\n  margin:7px;\\n  opacity:0.5;\\n  transition: all 0.5s ease;\\n}\\n\\n/*DYB resume selected choice design*/\\n.profilContainer #resumesContainer .resume.choice{\\n  border:2px solid #27ae60;\\n  box-shadow: 0px 0px 5px #555;\\n  opacity:1;\\n  transition: all 0.2s ease;\\n}\\n\\n/*DYB resume hover choice design*/\\n.profilContainer #resumesContainer .resume:hover{\\n  box-shadow: 0px 0px 10px #555;\\n  opacity:1;\\n  transition: all 0.2s ease;\\n}\\n\\n/*resume choice title*/\\n.profilContainer #resumesContainer .resumeTitle{\\n  color:#2980b9;\\n  font-size: 10pt;\\n  width:180px;\\n  height:80px;\\n  margin:auto;\\n  margin-top:8px;\\n  text-align: center;\\n  padding:3px;\\n  border-bottom: 1px solid #2980b9;\\n  border-top: 1px solid #2980b9;\\n  overflow: scroll;\\n}\\n\\n/*Loading icon to wait while getting information from DoYouBuzz and updating*/\\n.profilContainer #DYBloadingIcon{\\n  display: inline-block;\\n  margin-left: 20px;\\n}\\n</style><div class=\\\"container\\\"><div class=\\\"col-md-2 leftMenu\\\"><div class=\\\"sidebar-nav\\\"><div role=\\\"navigation\\\" class=\\\"navbar navbar-default\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".sidebar-navbar-collapse\\\" class=\\\"navbar-toggle\\\"><span class=\\\"sr-only\\\">Toggle navigation</span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span></button><span class=\\\"visible-xs navbar-brand\\\">Menu</span></div><div class=\\\"navbar-collapse collapse sidebar-navbar-collapse\\\"><ul class=\\\"nav navbar-nav\\\"><li class=\\\"active\\\"><a href=\\\"#\\\">Mon profil</a></li><li><a href=\\\"/public/portfolio\\\" target=\\\"_blank\\\">Voir mon Portfolio</a></li><li><a href=\\\"#choices\\\">Mes choix</a></li><li><a href=\\\"#accountSettings\\\">Paramètres</a></li></ul></div></div></div></div><div id=\\\"profilElements\\\" class=\\\"col-md-10 profilContainer\\\"><div class=\\\"row text-center\\\"><h1 style=\\\"margin-left:-100px;\\\" class=\\\"col-md-12\\\">Mon profil</h1></div><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><p>Prénom</p><input id=\\\"firstName\\\" type=\\\"text\\\" placeholder=\\\"Votre prénom\\\" name=\\\"firstName\\\"/><input id=\\\"firstNameCB\\\" type=\\\"checkbox\\\" name=\\\"firstNameCB\\\" class=\\\"visibilityCheckBox\\\"/><label for=\\\"firstNameCB\\\"></label><p>Nom</p><input id=\\\"lastName\\\" type=\\\"text\\\" placeholder=\\\"Votre nom\\\" name=\\\"lastName\\\"/><input id=\\\"lastNameCB\\\" type=\\\"checkbox\\\" name=\\\"lastNameCB\\\" class=\\\"visibilityCheckBox\\\"/><label for=\\\"lastNameCB\\\"></label><p>Date de naissance (pour votre âge uniquement)</p><input id=\\\"birthdayDate\\\" type=\\\"text\\\" placeholder=\\\"jj/mm/aaaa\\\" name=\\\"birthdayDate\\\"/><input id=\\\"birthdayDateCB\\\" type=\\\"checkbox\\\" name=\\\"birthdayDateCB\\\" class=\\\"visibilityCheckBox\\\"/><label for=\\\"birthdayDateCB\\\"></label><p>Email</p><input id=\\\"email\\\" type=\\\"text\\\" placeholder=\\\"example@domain.xyz\\\" name=\\\"email\\\"/><input id=\\\"emailCB\\\" type=\\\"checkbox\\\" name=\\\"emailCB\\\" class=\\\"visibilityCheckBox\\\"/><label for=\\\"emailCB\\\"></label><p>Description</p><textarea id=\\\"description\\\" style=\\\"resize:none;width:300px;height:100px;\\\" placeholder=\\\"Une petite description de vous\\\" name=\\\"description\\\"></textarea><input id=\\\"descriptionCB\\\" type=\\\"checkbox\\\" name=\\\"descriptionCB\\\" class=\\\"visibilityCheckBox\\\"/><label for=\\\"descriptionCB\\\"></label></div><div class=\\\"col-md-6\\\"><p>Situation professionnelle</p><input id=\\\"status\\\" type=\\\"text\\\" placeholder=\\\"Etudiant, expert chez ...\\\" name=\\\"status\\\"/><input id=\\\"statusCB\\\" type=\\\"checkbox\\\" name=\\\"statusCB\\\" class=\\\"visibilityCheckBox\\\"/><label for=\\\"statusCB\\\"></label><p>Situation géographique</p><input id=\\\"localisation\\\" type=\\\"text\\\" placeholder=\\\"Votre position géographique actuelle\\\" name=\\\"localisation\\\"/><input id=\\\"localisationCB\\\" type=\\\"checkbox\\\" name=\\\"localisationCB\\\" class=\\\"visibilityCheckBox\\\"/><label for=\\\"localisationCB\\\"></label><p>Loisirs (séparés par des  \\\" , \\\")</p><input id=\\\"hobbies\\\" type=\\\"text\\\" placeholder=\\\"Vos loisirs\\\" name=\\\"hobbies\\\"/><input id=\\\"hobbiesCB\\\" type=\\\"checkbox\\\" name=\\\"hobbiesCB\\\" class=\\\"visibilityCheckBox\\\"/><label for=\\\"hobbiesCB\\\"></label><p>Mots-clés (séparés par des  \\\" , \\\")</p><input id=\\\"keywords\\\" type=\\\"text\\\" placeholder=\\\"Des mots-clés décrivant votre profil\\\" name=\\\"keywords\\\"/><input id=\\\"keywordsCB\\\" type=\\\"checkbox\\\" name=\\\"keywordsCB\\\" class=\\\"visibilityCheckBox\\\"/><label for=\\\"keywordsCB\\\"></label></div></div><div id=\\\"resumesPart\\\" hidden=\\\"true\\\" class=\\\"row\\\"><div class=\\\"col-md-12\\\"><p>Vos CVs DoYouBuzz pour récupérer les informations du portfolio (un seul choix possible)</p><div id=\\\"resumesContainer\\\"></div></div></div><div class=\\\"row\\\"><div class=\\\"col-md-12 submitButton text-center\\\"><button id=\\\"submitChanges\\\" type=\\\"button\\\" onclick=\\\"submitInfos()\\\" class=\\\"btn btn-primary\\\">Valider les changements</button><button id=\\\"DYBSyncing\\\" type=\\\"button\\\" onclick=\\\"getDataFromDYBResume()\\\" class=\\\"btn btn-warning\\\">Récupérer les données depuis mon CV DoYouBuzz</button><div id=\\\"DYBloadingIcon\\\" style=\\\"display:none;\\\" class=\\\"spinner\\\"></div><div id=\\\"savedMessage\\\" hidden=\\\"true\\\" class=\\\"alert alert-success\\\"></div><div id=\\\"ErrorMessage\\\" hidden=\\\"true\\\" class=\\\"alert alert-danger\\\"></div></div></div></div></div><script type=\\\"text/javascript\\\">var data = {}; //to store user infos from the database in the global scope\\n//get all data from the database\\ngetInfos();\\n\\nfunction getInfos(){\\n  //remove all potential messages\\n  document.getElementById(\\\"ErrorMessage\\\").setAttribute(\\\"hidden\\\", \\\"true\\\");\\n  document.getElementById(\\\"savedMessage\\\").setAttribute(\\\"hidden\\\", \\\"true\\\");\\n  //requestion to the user information from the database\\n  var xmlHttp = new XMLHttpRequest();\\n  xmlHttp.open( \\\"GET\\\", \\\"getUserInfos\\\", false ); // false for synchronous request\\n  xmlHttp.send();\\n  if(xmlHttp.status != 200 && xmlHttp.status != 304){ //erreur du côté serveur\\n    document.getElementById(\\\"ErrorMessage\\\").innerHTML = \\\"Erreur serveur\\\";\\n    document.getElementById(\\\"ErrorMessage\\\").removeAttribute(\\\"hidden\\\");\\n  }\\n  data = JSON.parse(xmlHttp.responseText)[0] || {}; // there is only one document for userInfos, so this is the first element of the returned array, if this is the very first execution we create the object (because data will be undefined)\\n  for(var propertyName in data){ // for each information\\n    if(propertyName == \\\"resumes\\\"){//for resumes (array of resumes)\\n      //if there is at least one resume on DoYouBuzz, we display this part\\n      if(data[propertyName].length){\\n        document.getElementById(\\\"resumesPart\\\").removeAttribute(\\\"hidden\\\");\\n        for(var resume in data[propertyName]){\\n          if(document.getElementById(\\\"resumeId\\\"+data[propertyName][resume].id) !== null) continue; //if this resume was already registered\\n          //we create the HTML structure of the resume to be displayed\\n          var resumeElement = document.createElement(\\\"div\\\");\\n          resumeElement.className = \\\"resume\\\";\\n          resumeElement.addEventListener(\\\"click\\\", function(){chooseResume(this);}, false); //user interface picking behavior\\n          //title part\\n          var titleElement = document.createElement(\\\"p\\\");\\n          titleElement.innerHTML = data[propertyName][resume].title;\\n          titleElement.className = \\\"resumeTitle\\\";\\n          titleElement.id = \\\"resumeId\\\" + data[propertyName][resume].id;\\n          titleElement.setAttribute(\\\"resumeId\\\", data[propertyName][resume].id);\\n          resumeElement.appendChild(titleElement); //we append the title element to the resume element\\n          document.getElementById(\\\"resumesContainer\\\").appendChild(resumeElement); //we append the resume element to the page\\n        }\\n      }\\n      continue;\\n    }\\n    if(propertyName == \\\"activeResumeId\\\"){ //if a resume is already picked by the user\\n      if(document.getElementById(\\\"resumeId\\\"+data[propertyName]) !== null)document.getElementById(\\\"resumeId\\\"+data[propertyName]).parentNode.className = \\\"resume choice\\\";\\n    }\\n    if(document.getElementById(propertyName) === null) continue; //if for some reason the html structure for this property doesn't exist\\n    //we put the information into the correct input\\n    document.getElementById(propertyName).value = data[propertyName].value;\\n    //and set the visibility preference\\n    document.getElementById(propertyName+\\\"CB\\\").checked = data[propertyName].visibility;\\n  }\\n}\\n\\n//function to submit information and save them into the database\\nfunction submitInfos(){\\n  //remove all potential messages\\n  document.getElementById(\\\"ErrorMessage\\\").setAttribute(\\\"hidden\\\", \\\"true\\\");\\n  document.getElementById(\\\"savedMessage\\\").setAttribute(\\\"hidden\\\", \\\"true\\\");\\n  var formElements = document.getElementById(\\\"profilElements\\\").getElementsByTagName(\\\"input\\\");\\n  var description = document.getElementsByTagName(\\\"textarea\\\")[0]; //for the description\\n  var dataToSend = {}; //object that will be sent to the database\\n  //propertie names of the user database model is the same than the name of all inputs(include textarea) here\\n  //for the description\\n  dataToSend[description.getAttribute(\\\"name\\\")] = description.value;\\n  //for the resume choice\\n  var choice = document.getElementsByClassName(\\\"choice\\\")[0];\\n  if(choice !== undefined) dataToSend.activeResumeId = choice.childNodes[0].getAttribute(\\\"resumeId\\\");\\n  //for all other information\\n  for(var i=0; i<formElements.length; i++){\\n    if(formElements[i].getAttribute(\\\"name\\\") === null) continue; //in case\\n    if(formElements[i].getAttribute('type') == 'checkbox'){ //for the visibility\\n      //we get the property name\\n      var name = formElements[i].getAttribute(\\\"name\\\");\\n      dataToSend[name] = formElements[i].checked; //and the value\\n    }else{ // for all input values\\n      var name = [formElements[i].getAttribute(\\\"name\\\")]; //we get the property\\n      dataToSend[name] = formElements[i].value; //and the value\\n    }\\n  }\\n  //parameters for the request, we need here the data object and the document id of the user document(gotten from the database in the global data object)\\n  var idToSent = data.id || \\\"\\\";//id of the document received (or nothing if this is the very first execution)\\n  var parameters = \\\"data=\\\"+JSON.stringify(dataToSend)+\\\"&id=\\\"+idToSent;\\n  //request\\n  var xhttpInfos = new XMLHttpRequest();\\n  xhttpInfos.open(\\\"PUT\\\", \\\"updateUserInfos\\\", true);\\n  xhttpInfos.setRequestHeader(\\\"Content-type\\\", \\\"application/x-www-form-urlencoded\\\");\\n  xhttpInfos.onreadystatechange = function(){\\n      if (xhttpInfos.readyState == 4 && (xhttpInfos.status == 200 || xhttpInfos.status == 304)) { //if success, we display a successful message\\n        document.getElementById(\\\"savedMessage\\\").removeAttribute(\\\"hidden\\\");\\n        document.getElementById(\\\"savedMessage\\\").innerHTML = xhttpInfos.responseText;\\n      }else if(xhttpInfos.readyState == 4){ //if error, we display an error message\\n        document.getElementById(\\\"ErrorMessage\\\").removeAttribute(\\\"hidden\\\");\\n        document.getElementById(\\\"ErrorMessage\\\").innerHTML = xhttpInfos.responseText;\\n      }\\n  }\\n  xhttpInfos.send(parameters);\\n}\\n\\n//function to hande the UI resume selection, it takes the selected resume HTML element as parameter\\nfunction chooseResume(element){\\n  //we get all resumes HTML elements\\n  var resumesDIVs = document.getElementById(\\\"resumesContainer\\\").getElementsByClassName(\\\"resume\\\");\\n  for(var i in resumesDIVs){ //put the default class name (to remove a potential previous selection)\\n    resumesDIVs[i].className = \\\"resume\\\";\\n  }\\n  element.className = \\\"resume choice\\\"; //and add the \\\"choice\\\" class name to the selected resume\\n}\\n\\n\\nfunction getDataFromDYBResume(){\\n  //remove all potential messages\\n  document.getElementById(\\\"ErrorMessage\\\").setAttribute(\\\"hidden\\\", \\\"true\\\");\\n  document.getElementById(\\\"savedMessage\\\").setAttribute(\\\"hidden\\\", \\\"true\\\");\\n  //we warn about the user about this update\\n  if(confirm(\\\"Cette action mettre à jour les champs nom, prénom, email ainsi que la liste de vos CV DoYouBuzz. Continuer?\\\")){\\n    document.getElementById(\\\"DYBloadingIcon\\\").setAttribute(\\\"style\\\", \\\"\\\"); //we display the loading icon\\n    //the request\\n    var xmlHttp = new XMLHttpRequest();\\n    xmlHttp.open( \\\"POST\\\", \\\"getDYBUserInfos\\\", true ); // true for asynchronous request\\n    xmlHttp.setRequestHeader(\\\"Content-type\\\", \\\"application/x-www-form-urlencoded\\\");\\n    xmlHttp.onreadystatechange = function(){\\n        if (xmlHttp.readyState == 4 && (xmlHttp.status == 200 || xmlHttp.status == 304)) {//if success, we display a succesful message\\n          document.getElementById(\\\"DYBloadingIcon\\\").setAttribute(\\\"style\\\", \\\"display:none\\\");\\n          document.getElementById(\\\"savedMessage\\\").removeAttribute(\\\"hidden\\\");\\n          document.getElementById(\\\"savedMessage\\\").innerHTML = xmlHttp.responseText;\\n          getInfos();\\n        }else if(xmlHttp.readyState == 4){ // if error, we display an error message\\n          document.getElementById(\\\"DYBloadingIcon\\\").setAttribute(\\\"style\\\", \\\"display:none\\\");\\n          document.getElementById(\\\"ErrorMessage\\\").removeAttribute(\\\"hidden\\\");\\n          document.getElementById(\\\"ErrorMessage\\\").innerHTML = xmlHttp.responseText;\\n        }\\n    }\\n    xmlHttp.send();\\n  }\\n}</script>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","require('../lib/view_helper');\n\n// Base class for all views.\nmodule.exports = Backbone.View.extend({\n  initialize: function () {\n    this.render = _.bind(this.render, this);\n  },\n\n  template: function () { return null; },\n  getRenderData: function () { return null; },\n\n  render: function () {\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  },\n\n  afterRender: function () { return null; }\n});\n"]}